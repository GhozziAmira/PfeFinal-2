/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2 as Renderer, NgZone } from '@angular/core';
import { Button } from '@progress/kendo-angular-buttons';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ExcelService } from './excel.service';
/**
 * Represents the `export-to-Excel` command of the Grid. You can apply this
 * directive to any `button` element inside a
 * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).
 * When the user clicks a button associated with the directive, the
 * [`excelExport`]({% slug api_grid_gridcomponent %}#toc-excelexport) event
 * fires ([see example]({% slug excelexport_grid %})).
 *
 * @example
 * ```html-no-run
 * <kendo-grid>
 *      <ng-template kendoGridToolbarTemplate>
 *          <button kendoGridExcelCommand>Export to PDF</button>
 *      </ng-template>
 *      <kendo-grid-excel fileName="Grid.xlsx">
 *      </kendo-grid-excel>
 * </kendo-grid>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ExcelCommandDirective extends Button {
    private excelService;
    /**
     * @hidden
     */
    onClick(e: any): void;
    /**
     * @hidden
     */
    readonly excelClass: boolean;
    constructor(excelService: ExcelService, element: ElementRef, renderer: Renderer, localization: LocalizationService, ngZone: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ExcelCommandDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ExcelCommandDirective, "[kendoGridExcelCommand]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtY29tbWFuZC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZXhjZWwtY29tbWFuZC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTs7Ozs7Ozs7Ozs7OztBQVdBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyIGFzIFJlbmRlcmVyLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnMnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgRXhjZWxTZXJ2aWNlIH0gZnJvbSAnLi9leGNlbC5zZXJ2aWNlJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgYGV4cG9ydC10by1FeGNlbGAgY29tbWFuZCBvZiB0aGUgR3JpZC4gWW91IGNhbiBhcHBseSB0aGlzXG4gKiBkaXJlY3RpdmUgdG8gYW55IGBidXR0b25gIGVsZW1lbnQgaW5zaWRlIGFcbiAqIFtgVG9vbGJhclRlbXBsYXRlYF0oeyUgc2x1ZyBhcGlfZ3JpZF9jb21tYW5kY29sdW1uY29tcG9uZW50ICV9KS5cbiAqIFdoZW4gdGhlIHVzZXIgY2xpY2tzIGEgYnV0dG9uIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGlyZWN0aXZlLCB0aGVcbiAqIFtgZXhjZWxFeHBvcnRgXSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLWV4Y2VsZXhwb3J0KSBldmVudFxuICogZmlyZXMgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBleGNlbGV4cG9ydF9ncmlkICV9KSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tZ3JpZD5cbiAqICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZT5cbiAqICAgICAgICAgIDxidXR0b24ga2VuZG9HcmlkRXhjZWxDb21tYW5kPkV4cG9ydCB0byBQREY8L2J1dHRvbj5cbiAqICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgPGtlbmRvLWdyaWQtZXhjZWwgZmlsZU5hbWU9XCJHcmlkLnhsc3hcIj5cbiAqICAgICAgPC9rZW5kby1ncmlkLWV4Y2VsPlxuICogPC9rZW5kby1ncmlkPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEV4Y2VsQ29tbWFuZERpcmVjdGl2ZSBleHRlbmRzIEJ1dHRvbiB7XG4gICAgcHJpdmF0ZSBleGNlbFNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2soZTogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgZXhjZWxDbGFzczogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihleGNlbFNlcnZpY2U6IEV4Y2VsU2VydmljZSwgZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIG5nWm9uZTogTmdab25lKTtcbn1cbiJdfQ==