/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter } from '@angular/core';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { ColumnMenuItemBase } from './column-menu-item-base';
/**
 * Represents the component for editing column filters in the Grid that can be placed
 * inside a [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.
 *
 * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by
 * > the template to the service input of the `kendo-grid-columnmenu-filter` component.
 *
 * @example
 * {% meta height:400 %}
 * ```ts-preview
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *       <kendo-grid [kendoGridBinding]="data" [columnMenu]="true">
 *          <ng-template kendoGridColumnMenuTemplate let-service="service">
 *              <kendo-grid-columnmenu-filter [service]="service">
 *              </kendo-grid-columnmenu-filter>
 *          </ng-template>
 *          <kendo-grid-column field="Field1"></kendo-grid-column>
 *          <kendo-grid-column field="Field2"></kendo-grid-column>
 *       </kendo-grid>
 *     `
 * })
 *
 * class AppComponent {
 *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];
 * }
 *
 * ```
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnMenuFilterComponent extends ColumnMenuItemBase {
    localization: LocalizationService;
    /**
     * Fires when the content is expanded.
     */
    expand: EventEmitter<any>;
    /**
     * Fires when the content is collapsed.
     */
    collapse: EventEmitter<any>;
    /**
     * Specifies if the content is expanded.
     */
    expanded: boolean;
    /**
     * @hidden
     */
    actionsClass: string;
    constructor(localization: LocalizationService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnMenuFilterComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnMenuFilterComponent, "kendo-grid-columnmenu-filter", never, {
    "expanded": "expanded";
}, {
    "expand": "expand";
    "collapse": "collapse";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW1lbnUtZmlsdGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjb2x1bW4tbWVudS1maWx0ZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1Q0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSBcIkBwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG5cIjtcbmltcG9ydCB7IENvbHVtbk1lbnVJdGVtQmFzZSB9IGZyb20gJy4vY29sdW1uLW1lbnUtaXRlbS1iYXNlJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29tcG9uZW50IGZvciBlZGl0aW5nIGNvbHVtbiBmaWx0ZXJzIGluIHRoZSBHcmlkIHRoYXQgY2FuIGJlIHBsYWNlZFxuICogaW5zaWRlIGEgW2BDb2x1bW5NZW51VGVtcGxhdGVgXSh7JSBzbHVnIGFwaV9ncmlkX2NvbHVtbm1lbnV0ZW1wbGF0ZWRpcmVjdGl2ZSAlfSkgZGlyZWN0aXZlLlxuICpcbiAqID4gWW91IGhhdmUgdG8gc2V0IHRoZSBbQ29sdW1uTWVudVNlcnZpY2VdKHslIHNsdWcgYXBpX2dyaWRfY29sdW1ubWVudXNlcnZpY2UgJX0pIHRoYXQgaXMgcGFzc2VkIGJ5XG4gKiA+IHRoZSB0ZW1wbGF0ZSB0byB0aGUgc2VydmljZSBpbnB1dCBvZiB0aGUgYGtlbmRvLWdyaWQtY29sdW1ubWVudS1maWx0ZXJgIGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogeyUgbWV0YSBoZWlnaHQ6NDAwICV9XG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgICB0ZW1wbGF0ZTogYFxuICogICAgICAgPGtlbmRvLWdyaWQgW2tlbmRvR3JpZEJpbmRpbmddPVwiZGF0YVwiIFtjb2x1bW5NZW51XT1cInRydWVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRDb2x1bW5NZW51VGVtcGxhdGUgbGV0LXNlcnZpY2U9XCJzZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1ubWVudS1maWx0ZXIgW3NlcnZpY2VdPVwic2VydmljZVwiPlxuICogICAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW5tZW51LWZpbHRlcj5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJGaWVsZDFcIj48L2tlbmRvLWdyaWQtY29sdW1uPlxuICogICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiRmllbGQyXCI+PC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgIDwva2VuZG8tZ3JpZD5cbiAqICAgICBgXG4gKiB9KVxuICpcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgIHB1YmxpYyBkYXRhOiBhbnlbXSA9IFt7IEZpZWxkMTogJ0ZvbycsIEZpZWxkMjogJ0JhcicgfV07XG4gKiB9XG4gKlxuICogYGBgXG4gKiB7JSBlbmRtZXRhICV9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbHVtbk1lbnVGaWx0ZXJDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5NZW51SXRlbUJhc2Uge1xuICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZTtcbiAgICAvKipcbiAgICAgKiBGaXJlcyB3aGVuIHRoZSBjb250ZW50IGlzIGV4cGFuZGVkLlxuICAgICAqL1xuICAgIGV4cGFuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgLyoqXG4gICAgICogRmlyZXMgd2hlbiB0aGUgY29udGVudCBpcyBjb2xsYXBzZWQuXG4gICAgICovXG4gICAgY29sbGFwc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyBpZiB0aGUgY29udGVudCBpcyBleHBhbmRlZC5cbiAgICAgKi9cbiAgICBleHBhbmRlZDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgYWN0aW9uc0NsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbn1cbiJdfQ==