/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, NgZone, Renderer2, EventEmitter, OnInit, OnDestroy } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnListComponent implements OnInit, OnDestroy {
    private element;
    private ngZone;
    private renderer;
    readonly className: boolean;
    reset: EventEmitter<any>;
    apply: EventEmitter<any>;
    columnChange: EventEmitter<any>;
    columns: any[];
    autoSync: boolean;
    allowHideAll: boolean;
    applyText: string;
    resetText: string;
    actionsClass: string;
    private hasLocked;
    private hasVisibleLocked;
    private unlockedCount;
    private hasUnlockedFiltered;
    private hasFiltered;
    private _columns;
    private allColumns;
    private domSubscriptions;
    constructor(element: ElementRef, ngZone: NgZone, renderer: Renderer2);
    isDisabled(column: any): boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    cancelChanges(): void;
    applyChanges(): void;
    private forEachCheckBox;
    private updateDisabled;
    private updateColumnState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnListComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnListComponent, "kendo-grid-columnlist", never, {
    "autoSync": "autoSync";
    "allowHideAll": "allowHideAll";
    "actionsClass": "actionsClass";
    "columns": "columns";
    "applyText": "applyText";
    "resetText": "resetText";
}, {
    "reset": "reset";
    "apply": "apply";
    "columnChange": "columnChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbHVtbi1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBOZ1pvbmUsIFJlbmRlcmVyMiwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbHVtbkxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbGVtZW50O1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcmVhZG9ubHkgY2xhc3NOYW1lOiBib29sZWFuO1xuICAgIHJlc2V0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBhcHBseTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29sdW1uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb2x1bW5zOiBhbnlbXTtcbiAgICBhdXRvU3luYzogYm9vbGVhbjtcbiAgICBhbGxvd0hpZGVBbGw6IGJvb2xlYW47XG4gICAgYXBwbHlUZXh0OiBzdHJpbmc7XG4gICAgcmVzZXRUZXh0OiBzdHJpbmc7XG4gICAgYWN0aW9uc0NsYXNzOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBoYXNMb2NrZWQ7XG4gICAgcHJpdmF0ZSBoYXNWaXNpYmxlTG9ja2VkO1xuICAgIHByaXZhdGUgdW5sb2NrZWRDb3VudDtcbiAgICBwcml2YXRlIGhhc1VubG9ja2VkRmlsdGVyZWQ7XG4gICAgcHJpdmF0ZSBoYXNGaWx0ZXJlZDtcbiAgICBwcml2YXRlIF9jb2x1bW5zO1xuICAgIHByaXZhdGUgYWxsQ29sdW1ucztcbiAgICBwcml2YXRlIGRvbVN1YnNjcmlwdGlvbnM7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZiwgbmdab25lOiBOZ1pvbmUsIHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIGlzRGlzYWJsZWQoY29sdW1uOiBhbnkpOiBib29sZWFuO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBjYW5jZWxDaGFuZ2VzKCk6IHZvaWQ7XG4gICAgYXBwbHlDaGFuZ2VzKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBmb3JFYWNoQ2hlY2tCb3g7XG4gICAgcHJpdmF0ZSB1cGRhdGVEaXNhYmxlZDtcbiAgICBwcml2YXRlIHVwZGF0ZUNvbHVtblN0YXRlO1xufVxuIl19