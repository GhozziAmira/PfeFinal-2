/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Represents the toolbar template of the Grid.
 *
 * The template context has the following field:
 * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are "top" and "bottom".
 *
 * @example
 * ```ts-preview
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *       <div class="example-config">
 *         <input type="radio" id="top" name="position" class="k-radio" value="top" checked (click)="positionChange($event)"/>
 *         <label class="k-radio-label" for="top">Top</label><br/>
 *         <input type="radio" id="bottom" name="position" class="k-radio" value="bottom" (click)="positionChange($event)"/>
 *         <label class="k-radio-label" for="bottom">Bottom</label><br/>
 *         <input type="radio" id="both" name="position" value="both" class="k-radio" (click)="positionChange($event)"/>
 *         <label class="k-radio-label" for="both">Both</label><br/>
 *       </div>
 *       <kendo-grid [data]="gridData" style="height: 200px">
 *            <ng-template kendoGridToolbarTemplate [position]="position" let-position="position">
 *                <button (click)="onClick()" class="k-button">Custom action</button>
 *            </ng-template>
 *            <kendo-grid-column field="ProductName">
 *            </kendo-grid-column>
 *            <kendo-grid-column field="UnitPrice">
 *            </kendo-grid-column>
 *        </kendo-grid>
 *     `
 * })
 *
 * class AppComponent {
 *     public position: 'top' | 'bottom' | 'both' = 'top';
 *
 *     public gridData = [{
 *         "ProductID": 1,
 *         "ProductName": "Chai",
 *         "UnitPrice": 18.0000,
 *         "Discontinued": false
 *       }, {
 *         "ProductID": 2,
 *         "ProductName": "Chang",
 *         "UnitPrice": 19.0000,
 *         "Discontinued": true
 *       }
 *     ];
 *
 *     public onClick(): void {
 *         console.log("button was clicked");
 *     }
 *
 *     public positionChange({ target }): void {
 *        this.position = target.value;
 *     }
 * }
 *
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ToolbarTemplateDirective {
    templateRef: TemplateRef<any>;
    _position: 'top' | 'bottom' | 'both';
    /**
     * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).
     *
     * The possible values are:
     * - `top`&mdash;Positions the toolbar above the group panel or header.
     * - `bottom`&mdash;Positions the toolbar below the pager.
     * - `both`&mdash;Displays two toolbar instances. Positions the first one above
     * the group panel or header and the second one below the pager.
     */
    position: 'top' | 'bottom' | 'both';
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToolbarTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ToolbarTemplateDirective, "[kendoGridToolbarTemplate]", never, {
    "position": "position";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci10ZW1wbGF0ZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsidG9vbGJhci10ZW1wbGF0ZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnRUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgdG9vbGJhciB0ZW1wbGF0ZSBvZiB0aGUgR3JpZC5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBoYXMgdGhlIGZvbGxvd2luZyBmaWVsZDpcbiAqIC0gYHBvc2l0aW9uYCZtZGFzaDtUaGUgcG9zaXRpb24gYXQgd2hpY2ggdGhlIHRvb2xiYXIgdGVtcGxhdGUgaXMgcmVuZGVyZWQuIFRoZSBwb3NzaWJsZSB2YWx1ZXMgYXJlIFwidG9wXCIgYW5kIFwiYm90dG9tXCIuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzLXByZXZpZXdcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8ZGl2IGNsYXNzPVwiZXhhbXBsZS1jb25maWdcIj5cbiAqICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIGlkPVwidG9wXCIgbmFtZT1cInBvc2l0aW9uXCIgY2xhc3M9XCJrLXJhZGlvXCIgdmFsdWU9XCJ0b3BcIiBjaGVja2VkIChjbGljayk9XCJwb3NpdGlvbkNoYW5nZSgkZXZlbnQpXCIvPlxuICogICAgICAgICA8bGFiZWwgY2xhc3M9XCJrLXJhZGlvLWxhYmVsXCIgZm9yPVwidG9wXCI+VG9wPC9sYWJlbD48YnIvPlxuICogICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJib3R0b21cIiBuYW1lPVwicG9zaXRpb25cIiBjbGFzcz1cImstcmFkaW9cIiB2YWx1ZT1cImJvdHRvbVwiIChjbGljayk9XCJwb3NpdGlvbkNoYW5nZSgkZXZlbnQpXCIvPlxuICogICAgICAgICA8bGFiZWwgY2xhc3M9XCJrLXJhZGlvLWxhYmVsXCIgZm9yPVwiYm90dG9tXCI+Qm90dG9tPC9sYWJlbD48YnIvPlxuICogICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJib3RoXCIgbmFtZT1cInBvc2l0aW9uXCIgdmFsdWU9XCJib3RoXCIgY2xhc3M9XCJrLXJhZGlvXCIgKGNsaWNrKT1cInBvc2l0aW9uQ2hhbmdlKCRldmVudClcIi8+XG4gKiAgICAgICAgIDxsYWJlbCBjbGFzcz1cImstcmFkaW8tbGFiZWxcIiBmb3I9XCJib3RoXCI+Qm90aDwvbGFiZWw+PGJyLz5cbiAqICAgICAgIDwvZGl2PlxuICogICAgICAgPGtlbmRvLWdyaWQgW2RhdGFdPVwiZ3JpZERhdGFcIiBzdHlsZT1cImhlaWdodDogMjAwcHhcIj5cbiAqICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvR3JpZFRvb2xiYXJUZW1wbGF0ZSBbcG9zaXRpb25dPVwicG9zaXRpb25cIiBsZXQtcG9zaXRpb249XCJwb3NpdGlvblwiPlxuICogICAgICAgICAgICAgICAgPGJ1dHRvbiAoY2xpY2spPVwib25DbGljaygpXCIgY2xhc3M9XCJrLWJ1dHRvblwiPkN1c3RvbSBhY3Rpb248L2J1dHRvbj5cbiAqICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiUHJvZHVjdE5hbWVcIj5cbiAqICAgICAgICAgICAgPC9rZW5kby1ncmlkLWNvbHVtbj5cbiAqICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uIGZpZWxkPVwiVW5pdFByaWNlXCI+XG4gKiAgICAgICAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgICAgICAgPC9rZW5kby1ncmlkPlxuICogICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgICBwdWJsaWMgcG9zaXRpb246ICd0b3AnIHwgJ2JvdHRvbScgfCAnYm90aCcgPSAndG9wJztcbiAqXG4gKiAgICAgcHVibGljIGdyaWREYXRhID0gW3tcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMSxcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYWlcIixcbiAqICAgICAgICAgXCJVbml0UHJpY2VcIjogMTguMDAwMCxcbiAqICAgICAgICAgXCJEaXNjb250aW51ZWRcIjogZmFsc2VcbiAqICAgICAgIH0sIHtcbiAqICAgICAgICAgXCJQcm9kdWN0SURcIjogMixcbiAqICAgICAgICAgXCJQcm9kdWN0TmFtZVwiOiBcIkNoYW5nXCIsXG4gKiAgICAgICAgIFwiVW5pdFByaWNlXCI6IDE5LjAwMDAsXG4gKiAgICAgICAgIFwiRGlzY29udGludWVkXCI6IHRydWVcbiAqICAgICAgIH1cbiAqICAgICBdO1xuICpcbiAqICAgICBwdWJsaWMgb25DbGljaygpOiB2b2lkIHtcbiAqICAgICAgICAgY29uc29sZS5sb2coXCJidXR0b24gd2FzIGNsaWNrZWRcIik7XG4gKiAgICAgfVxuICpcbiAqICAgICBwdWJsaWMgcG9zaXRpb25DaGFuZ2UoeyB0YXJnZXQgfSk6IHZvaWQge1xuICogICAgICAgIHRoaXMucG9zaXRpb24gPSB0YXJnZXQudmFsdWU7XG4gKiAgICAgfVxuICogfVxuICpcbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb29sYmFyVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIF9wb3NpdGlvbjogJ3RvcCcgfCAnYm90dG9tJyB8ICdib3RoJztcbiAgICAvKipcbiAgICAgKiBUaGUgcG9zaXRpb24gb2YgdGhlIHRvb2xiYXIgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB0b29sYmFydGVtcGxhdGVfZ3JpZCAlfSkpLlxuICAgICAqXG4gICAgICogVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmU6XG4gICAgICogLSBgdG9wYCZtZGFzaDtQb3NpdGlvbnMgdGhlIHRvb2xiYXIgYWJvdmUgdGhlIGdyb3VwIHBhbmVsIG9yIGhlYWRlci5cbiAgICAgKiAtIGBib3R0b21gJm1kYXNoO1Bvc2l0aW9ucyB0aGUgdG9vbGJhciBiZWxvdyB0aGUgcGFnZXIuXG4gICAgICogLSBgYm90aGAmbWRhc2g7RGlzcGxheXMgdHdvIHRvb2xiYXIgaW5zdGFuY2VzLiBQb3NpdGlvbnMgdGhlIGZpcnN0IG9uZSBhYm92ZVxuICAgICAqIHRoZSBncm91cCBwYW5lbCBvciBoZWFkZXIgYW5kIHRoZSBzZWNvbmQgb25lIGJlbG93IHRoZSBwYWdlci5cbiAgICAgKi9cbiAgICBwb3NpdGlvbjogJ3RvcCcgfCAnYm90dG9tJyB8ICdib3RoJztcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pik7XG59XG4iXX0=