/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy } from '@angular/core';
import { GridComponent } from '../grid.component';
import { Subscription } from 'rxjs';
import { RowArgs } from './common/row-args';
/**
 * A directive which controls the expanded state of the master detail rows.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ExpandDetailsDirective implements OnDestroy {
    protected grid: GridComponent;
    /**
     * Fires when the expandedDetailKeys are changed.
     */
    expandedDetailKeysChange: EventEmitter<any[]>;
    /**
     * Defines the item key that will be stored in the `expandedDetailKeys` collection.
     */
    expandDetailBy: string | ((dataItem: any) => any);
    /**
     * Defines the collection that will store the expanded keys.
     */
    expandedDetailKeys: any[];
    /**
     * Specifies if the items should be initially expanded.
     * @default false
     */
    initiallyExpanded: boolean;
    protected _expandBy: any;
    protected subscriptions: Subscription;
    constructor(grid: GridComponent);
    ngOnDestroy(): void;
    protected readonly keyGetter: any;
    /**
     * @hidden
     */
    isExpanded(args: RowArgs): boolean;
    private toggleState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ExpandDetailsDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ExpandDetailsDirective, "[kendoGridExpandDetailsBy]", ["kendoGridExpandDetailsBy"], {
    "expandedDetailKeys": "expandedDetailKeys";
    "initiallyExpanded": "initiallyExpanded";
    "expandDetailBy": "expandDetailBy";
}, {
    "expandedDetailKeysChange": "expandedDetailKeysChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJleHBhbmQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdyaWRDb21wb25lbnQgfSBmcm9tICcuLi9ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFJvd0FyZ3MgfSBmcm9tICcuL2NvbW1vbi9yb3ctYXJncyc7XG4vKipcbiAqIEEgZGlyZWN0aXZlIHdoaWNoIGNvbnRyb2xzIHRoZSBleHBhbmRlZCBzdGF0ZSBvZiB0aGUgbWFzdGVyIGRldGFpbCByb3dzLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFeHBhbmREZXRhaWxzRGlyZWN0aXZlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcm90ZWN0ZWQgZ3JpZDogR3JpZENvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBGaXJlcyB3aGVuIHRoZSBleHBhbmRlZERldGFpbEtleXMgYXJlIGNoYW5nZWQuXG4gICAgICovXG4gICAgZXhwYW5kZWREZXRhaWxLZXlzQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55W10+O1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGl0ZW0ga2V5IHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIGBleHBhbmRlZERldGFpbEtleXNgIGNvbGxlY3Rpb24uXG4gICAgICovXG4gICAgZXhwYW5kRGV0YWlsQnk6IHN0cmluZyB8ICgoZGF0YUl0ZW06IGFueSkgPT4gYW55KTtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBjb2xsZWN0aW9uIHRoYXQgd2lsbCBzdG9yZSB0aGUgZXhwYW5kZWQga2V5cy5cbiAgICAgKi9cbiAgICBleHBhbmRlZERldGFpbEtleXM6IGFueVtdO1xuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyBpZiB0aGUgaXRlbXMgc2hvdWxkIGJlIGluaXRpYWxseSBleHBhbmRlZC5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuICAgIGluaXRpYWxseUV4cGFuZGVkOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfZXhwYW5kQnk6IGFueTtcbiAgICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGdyaWQ6IEdyaWRDb21wb25lbnQpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGtleUdldHRlcjogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpc0V4cGFuZGVkKGFyZ3M6IFJvd0FyZ3MpOiBib29sZWFuO1xuICAgIHByaXZhdGUgdG9nZ2xlU3RhdGU7XG59XG4iXX0=