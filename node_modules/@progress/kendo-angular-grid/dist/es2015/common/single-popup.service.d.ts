/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { PopupService, PopupRef } from '@progress/kendo-angular-popup';
import { Renderer2, NgZone, OnDestroy } from '@angular/core';
import { PreventableEvent } from './preventable-event';
import { Subject } from 'rxjs';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ScrollSyncService } from '../scrolling/scroll-sync.service';
/**
 * Arguments for the `close` event of the filter and column-menu popup.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PopupCloseEvent extends PreventableEvent {
    /**
     * The original DOM event that causes the popup to close.
     */
    originalEvent: any;
    constructor(e: any);
}
/**
 * The service that is used for the popups of the filter and column menus
 * ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-menu-with-popup)).
 */
export declare class SinglePopupService implements OnDestroy {
    private popupService;
    private renderer;
    private ngZone;
    private localization;
    /**
     * Fires when the filter or column menus are about to close because the user clicked outside their popups.
     * Used to prevent the popup from closing.
     */
    readonly onClose: Subject<PopupCloseEvent>;
    private removeClick;
    private popupRef;
    private scrollSubscription;
    constructor(popupService: PopupService, renderer: Renderer2, ngZone: NgZone, scrollSyncService: ScrollSyncService, localization: LocalizationService);
    /**
     * @hidden
     */
    open(anchor: any, template: any, popupRef: PopupRef, popupClass?: string): PopupRef;
    /**
     * @hidden
     */
    destroy(): void;
    ngOnDestroy(): void;
    private detachClose;
    private attachClose;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SinglePopupService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SinglePopupService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXBvcHVwLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsic2luZ2xlLXBvcHVwLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFhQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UsIFBvcHVwUmVmIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItcG9wdXAnO1xuaW1wb3J0IHsgUmVuZGVyZXIyLCBOZ1pvbmUsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJldmVudGFibGVFdmVudCB9IGZyb20gJy4vcHJldmVudGFibGUtZXZlbnQnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgU2Nyb2xsU3luY1NlcnZpY2UgfSBmcm9tICcuLi9zY3JvbGxpbmcvc2Nyb2xsLXN5bmMuc2VydmljZSc7XG4vKipcbiAqIEFyZ3VtZW50cyBmb3IgdGhlIGBjbG9zZWAgZXZlbnQgb2YgdGhlIGZpbHRlciBhbmQgY29sdW1uLW1lbnUgcG9wdXAuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvcHVwQ2xvc2VFdmVudCBleHRlbmRzIFByZXZlbnRhYmxlRXZlbnQge1xuICAgIC8qKlxuICAgICAqIFRoZSBvcmlnaW5hbCBET00gZXZlbnQgdGhhdCBjYXVzZXMgdGhlIHBvcHVwIHRvIGNsb3NlLlxuICAgICAqL1xuICAgIG9yaWdpbmFsRXZlbnQ6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihlOiBhbnkpO1xufVxuLyoqXG4gKiBUaGUgc2VydmljZSB0aGF0IGlzIHVzZWQgZm9yIHRoZSBwb3B1cHMgb2YgdGhlIGZpbHRlciBhbmQgY29sdW1uIG1lbnVzXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHJldXNhYmxlY3VzdG9tZmlsdGVyc19ncmlkICV9I3RvYy1maWx0ZXItbWVudS13aXRoLXBvcHVwKSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNpbmdsZVBvcHVwU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBwb3B1cFNlcnZpY2U7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbjtcbiAgICAvKipcbiAgICAgKiBGaXJlcyB3aGVuIHRoZSBmaWx0ZXIgb3IgY29sdW1uIG1lbnVzIGFyZSBhYm91dCB0byBjbG9zZSBiZWNhdXNlIHRoZSB1c2VyIGNsaWNrZWQgb3V0c2lkZSB0aGVpciBwb3B1cHMuXG4gICAgICogVXNlZCB0byBwcmV2ZW50IHRoZSBwb3B1cCBmcm9tIGNsb3NpbmcuXG4gICAgICovXG4gICAgcmVhZG9ubHkgb25DbG9zZTogU3ViamVjdDxQb3B1cENsb3NlRXZlbnQ+O1xuICAgIHByaXZhdGUgcmVtb3ZlQ2xpY2s7XG4gICAgcHJpdmF0ZSBwb3B1cFJlZjtcbiAgICBwcml2YXRlIHNjcm9sbFN1YnNjcmlwdGlvbjtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlcnZpY2U6IFBvcHVwU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgbmdab25lOiBOZ1pvbmUsIHNjcm9sbFN5bmNTZXJ2aWNlOiBTY3JvbGxTeW5jU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb3BlbihhbmNob3I6IGFueSwgdGVtcGxhdGU6IGFueSwgcG9wdXBSZWY6IFBvcHVwUmVmLCBwb3B1cENsYXNzPzogc3RyaW5nKTogUG9wdXBSZWY7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgZGV0YWNoQ2xvc2U7XG4gICAgcHJpdmF0ZSBhdHRhY2hDbG9zZTtcbn1cbiJdfQ==