/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Subject } from 'rxjs';
import { FocusRoot } from './focus-root';
import { FocusableDirective } from './focusable.directive';
import { LogicalCell } from './logical-cell.interface';
import { LogicalRow } from './logical-row.interface';
import { NavigationCell } from './navigation-cell.interface';
import { NavigationChange } from './navigation-change.interface';
import { NavigationMetadata } from './navigation-metadata';
import { NavigationRow } from './navigation-row.interface';
import { DomEventsService } from '../common/dom-events.service';
import { EditService } from '../editing/edit.service';
import { GroupsService } from '../grouping/groups.service';
import { PagerContextService } from '../pager/pager-context.service';
import { DetailsService } from '../rendering/details/details.service';
import { ScrollRequestService } from '../scrolling/scroll-request.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class NavigationViewport {
    firstItemIndex: number;
    lastItemIndex: number;
    constructor(firstItemIndex: number, lastItemIndex: number);
    containsRow(dataRowIndex: number): boolean;
    intersects(start: number, end: number): boolean;
}
/**
 * @hidden
 */
export declare class NavigationService implements OnDestroy {
    private zone;
    private domEvents;
    private pagerContextService;
    private scrollRequestService;
    private groupsService;
    private detailsService;
    private focusRoot;
    private editService;
    private cd;
    private localization;
    private focusableParent;
    readonly changes: Subject<NavigationChange>;
    readonly cellKeydown: EventEmitter<any>;
    metadata: NavigationMetadata;
    readonly enabled: boolean;
    readonly activeCell: NavigationCell;
    readonly activeRow: NavigationRow;
    viewport: NavigationViewport;
    columnViewport: NavigationViewport;
    private activeRowIndex;
    private alive;
    private active;
    private mode;
    private model;
    private cursor;
    private meta;
    private subs;
    private pendingRowIndex;
    private virtualCell;
    private readonly activeDataRow;
    constructor(zone: NgZone, domEvents: DomEventsService, pagerContextService: PagerContextService, scrollRequestService: ScrollRequestService, groupsService: GroupsService, detailsService: DetailsService, focusRoot: FocusRoot, editService: EditService, cd: ChangeDetectorRef, localization: LocalizationService, focusableParent: FocusableDirective);
    init(meta: NavigationMetadata): void;
    ngOnDestroy(): void;
    registerCell(cell: LogicalCell): void;
    registerCellOnCurrentRow(cell: LogicalCell): void;
    unregisterCell(index: number, rowIndex: number, cell: LogicalCell): void;
    registerRow(row: LogicalRow): void;
    updateRow(row: LogicalRow): void;
    unregisterRow(index: number, row: LogicalRow): void;
    isCellFocusable(cell: LogicalCell): boolean;
    isCellFocused(cell: LogicalCell): boolean;
    navigateTo(el: Element): void;
    tryFocus(el: Element): boolean;
    needsViewport(): boolean;
    setViewport(firstItemIndex: number, lastItemIndex: number): void;
    setColumnViewport(firstItemIndex: number, lastItemIndex: number): void;
    focusCell(rowIndex?: number, colIndex?: number): NavigationCell;
    focusNextCell(wrap?: boolean): NavigationCell;
    focusPrevCell(wrap?: boolean): NavigationCell;
    toggle(active: boolean): void;
    hasFocus(): boolean;
    autoFocusCell(start: number, end: number): boolean;
    private focusAdjacentCell;
    private enterCell;
    private leaveCell;
    private activateElements;
    private deactivateElements;
    private activateRow;
    private moveCursorFwd;
    private moveCursorBwd;
    private onCursorKeydown;
    private onContentKeydown;
    private onCellKeydown;
    private onCursorChanges;
    private onFocusOut;
    private onWindowBlur;
    private onKeydown;
    private onTabout;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavigationService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NavigationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm5hdmlnYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErRUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRm9jdXNSb290IH0gZnJvbSAnLi9mb2N1cy1yb290JztcbmltcG9ydCB7IEZvY3VzYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vZm9jdXNhYmxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBMb2dpY2FsQ2VsbCB9IGZyb20gJy4vbG9naWNhbC1jZWxsLmludGVyZmFjZSc7XG5pbXBvcnQgeyBMb2dpY2FsUm93IH0gZnJvbSAnLi9sb2dpY2FsLXJvdy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkNlbGwgfSBmcm9tICcuL25hdmlnYXRpb24tY2VsbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkNoYW5nZSB9IGZyb20gJy4vbmF2aWdhdGlvbi1jaGFuZ2UuaW50ZXJmYWNlJztcbmltcG9ydCB7IE5hdmlnYXRpb25NZXRhZGF0YSB9IGZyb20gJy4vbmF2aWdhdGlvbi1tZXRhZGF0YSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uUm93IH0gZnJvbSAnLi9uYXZpZ2F0aW9uLXJvdy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgRG9tRXZlbnRzU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9kb20tZXZlbnRzLnNlcnZpY2UnO1xuaW1wb3J0IHsgRWRpdFNlcnZpY2UgfSBmcm9tICcuLi9lZGl0aW5nL2VkaXQuc2VydmljZSc7XG5pbXBvcnQgeyBHcm91cHNTZXJ2aWNlIH0gZnJvbSAnLi4vZ3JvdXBpbmcvZ3JvdXBzLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFnZXJDb250ZXh0U2VydmljZSB9IGZyb20gJy4uL3BhZ2VyL3BhZ2VyLWNvbnRleHQuc2VydmljZSc7XG5pbXBvcnQgeyBEZXRhaWxzU2VydmljZSB9IGZyb20gJy4uL3JlbmRlcmluZy9kZXRhaWxzL2RldGFpbHMuc2VydmljZSc7XG5pbXBvcnQgeyBTY3JvbGxSZXF1ZXN0U2VydmljZSB9IGZyb20gJy4uL3Njcm9sbGluZy9zY3JvbGwtcmVxdWVzdC5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYXZpZ2F0aW9uVmlld3BvcnQge1xuICAgIGZpcnN0SXRlbUluZGV4OiBudW1iZXI7XG4gICAgbGFzdEl0ZW1JbmRleDogbnVtYmVyO1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0SXRlbUluZGV4OiBudW1iZXIsIGxhc3RJdGVtSW5kZXg6IG51bWJlcik7XG4gICAgY29udGFpbnNSb3coZGF0YVJvd0luZGV4OiBudW1iZXIpOiBib29sZWFuO1xuICAgIGludGVyc2VjdHMoc3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXIpOiBib29sZWFuO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdmlnYXRpb25TZXJ2aWNlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBkb21FdmVudHM7XG4gICAgcHJpdmF0ZSBwYWdlckNvbnRleHRTZXJ2aWNlO1xuICAgIHByaXZhdGUgc2Nyb2xsUmVxdWVzdFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBncm91cHNTZXJ2aWNlO1xuICAgIHByaXZhdGUgZGV0YWlsc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBmb2N1c1Jvb3Q7XG4gICAgcHJpdmF0ZSBlZGl0U2VydmljZTtcbiAgICBwcml2YXRlIGNkO1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uO1xuICAgIHByaXZhdGUgZm9jdXNhYmxlUGFyZW50O1xuICAgIHJlYWRvbmx5IGNoYW5nZXM6IFN1YmplY3Q8TmF2aWdhdGlvbkNoYW5nZT47XG4gICAgcmVhZG9ubHkgY2VsbEtleWRvd246IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG1ldGFkYXRhOiBOYXZpZ2F0aW9uTWV0YWRhdGE7XG4gICAgcmVhZG9ubHkgZW5hYmxlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBhY3RpdmVDZWxsOiBOYXZpZ2F0aW9uQ2VsbDtcbiAgICByZWFkb25seSBhY3RpdmVSb3c6IE5hdmlnYXRpb25Sb3c7XG4gICAgdmlld3BvcnQ6IE5hdmlnYXRpb25WaWV3cG9ydDtcbiAgICBjb2x1bW5WaWV3cG9ydDogTmF2aWdhdGlvblZpZXdwb3J0O1xuICAgIHByaXZhdGUgYWN0aXZlUm93SW5kZXg7XG4gICAgcHJpdmF0ZSBhbGl2ZTtcbiAgICBwcml2YXRlIGFjdGl2ZTtcbiAgICBwcml2YXRlIG1vZGU7XG4gICAgcHJpdmF0ZSBtb2RlbDtcbiAgICBwcml2YXRlIGN1cnNvcjtcbiAgICBwcml2YXRlIG1ldGE7XG4gICAgcHJpdmF0ZSBzdWJzO1xuICAgIHByaXZhdGUgcGVuZGluZ1Jvd0luZGV4O1xuICAgIHByaXZhdGUgdmlydHVhbENlbGw7XG4gICAgcHJpdmF0ZSByZWFkb25seSBhY3RpdmVEYXRhUm93O1xuICAgIGNvbnN0cnVjdG9yKHpvbmU6IE5nWm9uZSwgZG9tRXZlbnRzOiBEb21FdmVudHNTZXJ2aWNlLCBwYWdlckNvbnRleHRTZXJ2aWNlOiBQYWdlckNvbnRleHRTZXJ2aWNlLCBzY3JvbGxSZXF1ZXN0U2VydmljZTogU2Nyb2xsUmVxdWVzdFNlcnZpY2UsIGdyb3Vwc1NlcnZpY2U6IEdyb3Vwc1NlcnZpY2UsIGRldGFpbHNTZXJ2aWNlOiBEZXRhaWxzU2VydmljZSwgZm9jdXNSb290OiBGb2N1c1Jvb3QsIGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZSwgY2Q6IENoYW5nZURldGVjdG9yUmVmLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIGZvY3VzYWJsZVBhcmVudDogRm9jdXNhYmxlRGlyZWN0aXZlKTtcbiAgICBpbml0KG1ldGE6IE5hdmlnYXRpb25NZXRhZGF0YSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICByZWdpc3RlckNlbGwoY2VsbDogTG9naWNhbENlbGwpOiB2b2lkO1xuICAgIHJlZ2lzdGVyQ2VsbE9uQ3VycmVudFJvdyhjZWxsOiBMb2dpY2FsQ2VsbCk6IHZvaWQ7XG4gICAgdW5yZWdpc3RlckNlbGwoaW5kZXg6IG51bWJlciwgcm93SW5kZXg6IG51bWJlciwgY2VsbDogTG9naWNhbENlbGwpOiB2b2lkO1xuICAgIHJlZ2lzdGVyUm93KHJvdzogTG9naWNhbFJvdyk6IHZvaWQ7XG4gICAgdXBkYXRlUm93KHJvdzogTG9naWNhbFJvdyk6IHZvaWQ7XG4gICAgdW5yZWdpc3RlclJvdyhpbmRleDogbnVtYmVyLCByb3c6IExvZ2ljYWxSb3cpOiB2b2lkO1xuICAgIGlzQ2VsbEZvY3VzYWJsZShjZWxsOiBMb2dpY2FsQ2VsbCk6IGJvb2xlYW47XG4gICAgaXNDZWxsRm9jdXNlZChjZWxsOiBMb2dpY2FsQ2VsbCk6IGJvb2xlYW47XG4gICAgbmF2aWdhdGVUbyhlbDogRWxlbWVudCk6IHZvaWQ7XG4gICAgdHJ5Rm9jdXMoZWw6IEVsZW1lbnQpOiBib29sZWFuO1xuICAgIG5lZWRzVmlld3BvcnQoKTogYm9vbGVhbjtcbiAgICBzZXRWaWV3cG9ydChmaXJzdEl0ZW1JbmRleDogbnVtYmVyLCBsYXN0SXRlbUluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHNldENvbHVtblZpZXdwb3J0KGZpcnN0SXRlbUluZGV4OiBudW1iZXIsIGxhc3RJdGVtSW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgZm9jdXNDZWxsKHJvd0luZGV4PzogbnVtYmVyLCBjb2xJbmRleD86IG51bWJlcik6IE5hdmlnYXRpb25DZWxsO1xuICAgIGZvY3VzTmV4dENlbGwod3JhcD86IGJvb2xlYW4pOiBOYXZpZ2F0aW9uQ2VsbDtcbiAgICBmb2N1c1ByZXZDZWxsKHdyYXA/OiBib29sZWFuKTogTmF2aWdhdGlvbkNlbGw7XG4gICAgdG9nZ2xlKGFjdGl2ZTogYm9vbGVhbik6IHZvaWQ7XG4gICAgaGFzRm9jdXMoKTogYm9vbGVhbjtcbiAgICBhdXRvRm9jdXNDZWxsKHN0YXJ0OiBudW1iZXIsIGVuZDogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGZvY3VzQWRqYWNlbnRDZWxsO1xuICAgIHByaXZhdGUgZW50ZXJDZWxsO1xuICAgIHByaXZhdGUgbGVhdmVDZWxsO1xuICAgIHByaXZhdGUgYWN0aXZhdGVFbGVtZW50cztcbiAgICBwcml2YXRlIGRlYWN0aXZhdGVFbGVtZW50cztcbiAgICBwcml2YXRlIGFjdGl2YXRlUm93O1xuICAgIHByaXZhdGUgbW92ZUN1cnNvckZ3ZDtcbiAgICBwcml2YXRlIG1vdmVDdXJzb3JCd2Q7XG4gICAgcHJpdmF0ZSBvbkN1cnNvcktleWRvd247XG4gICAgcHJpdmF0ZSBvbkNvbnRlbnRLZXlkb3duO1xuICAgIHByaXZhdGUgb25DZWxsS2V5ZG93bjtcbiAgICBwcml2YXRlIG9uQ3Vyc29yQ2hhbmdlcztcbiAgICBwcml2YXRlIG9uRm9jdXNPdXQ7XG4gICAgcHJpdmF0ZSBvbldpbmRvd0JsdXI7XG4gICAgcHJpdmF0ZSBvbktleWRvd247XG4gICAgcHJpdmF0ZSBvblRhYm91dDtcbn1cbiJdfQ==