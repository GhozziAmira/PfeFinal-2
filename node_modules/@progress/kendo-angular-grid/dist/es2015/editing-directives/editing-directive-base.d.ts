/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnInit, OnDestroy } from '@angular/core';
import { GridComponent } from '../grid.component';
import { EditService } from './edit-service.interface';
import { Subscription, Observable } from 'rxjs';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class EditingDirectiveBase implements OnInit, OnDestroy {
    protected grid: GridComponent;
    protected localDataChangesService: LocalDataChangesService;
    /**
     * The edit service that will handle the operations.
     */
    editService: EditService;
    /**
     * A function that is called to confirm if the `dataItem` will be removed.
     */
    removeConfirmation: (dataItem: any) => Promise<boolean> | Observable<boolean> | boolean;
    protected subscriptions: Subscription;
    protected defaultEditService: EditService;
    protected userEditService: EditService;
    protected abstract createModel(args: any): any;
    protected abstract saveModel(args: any): any;
    constructor(grid: GridComponent, localDataChangesService: LocalDataChangesService);
    /**
     * @hidden
     */
    ngOnInit(): void;
    /**
     * @hidden
     */
    ngOnDestroy(): void;
    protected createDefaultService(): EditService;
    protected addHandler(): void;
    protected saveHandler(args: any): void;
    protected cancelHandler({ rowIndex }: any): void;
    protected removeHandler({ dataItem }: any): void;
    protected onStateChange(): void;
    protected closeEditor(rowIndex?: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditingDirectiveBase>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<EditingDirectiveBase, never, never, {
    "editService": "editService";
    "removeConfirmation": "removeConfirmation";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdGluZy1kaXJlY3RpdmUtYmFzZS5kLnRzIiwic291cmNlcyI6WyJlZGl0aW5nLWRpcmVjdGl2ZS1iYXNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRWRpdFNlcnZpY2UgfSBmcm9tICcuL2VkaXQtc2VydmljZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uLCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSB9IGZyb20gJy4uL2VkaXRpbmcvbG9jYWwtZGF0YS1jaGFuZ2VzLnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGFic3RyYWN0IGNsYXNzIEVkaXRpbmdEaXJlY3RpdmVCYXNlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBncmlkOiBHcmlkQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZTogTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U7XG4gICAgLyoqXG4gICAgICogVGhlIGVkaXQgc2VydmljZSB0aGF0IHdpbGwgaGFuZGxlIHRoZSBvcGVyYXRpb25zLlxuICAgICAqL1xuICAgIGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZTtcbiAgICAvKipcbiAgICAgKiBBIGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHRvIGNvbmZpcm0gaWYgdGhlIGBkYXRhSXRlbWAgd2lsbCBiZSByZW1vdmVkLlxuICAgICAqL1xuICAgIHJlbW92ZUNvbmZpcm1hdGlvbjogKGRhdGFJdGVtOiBhbnkpID0+IFByb21pc2U8Ym9vbGVhbj4gfCBPYnNlcnZhYmxlPGJvb2xlYW4+IHwgYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBkZWZhdWx0RWRpdFNlcnZpY2U6IEVkaXRTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCB1c2VyRWRpdFNlcnZpY2U6IEVkaXRTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBjcmVhdGVNb2RlbChhcmdzOiBhbnkpOiBhbnk7XG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IHNhdmVNb2RlbChhcmdzOiBhbnkpOiBhbnk7XG4gICAgY29uc3RydWN0b3IoZ3JpZDogR3JpZENvbXBvbmVudCwgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U6IExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlRGVmYXVsdFNlcnZpY2UoKTogRWRpdFNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGFkZEhhbmRsZXIoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgc2F2ZUhhbmRsZXIoYXJnczogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY2FuY2VsSGFuZGxlcih7IHJvd0luZGV4IH06IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlbW92ZUhhbmRsZXIoeyBkYXRhSXRlbSB9OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvblN0YXRlQ2hhbmdlKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNsb3NlRWRpdG9yKHJvd0luZGV4PzogbnVtYmVyKTogdm9pZDtcbn1cbiJdfQ==