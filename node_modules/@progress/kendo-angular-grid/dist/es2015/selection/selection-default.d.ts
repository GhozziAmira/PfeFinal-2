/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { GridComponent } from "../grid.component";
import { Subscription } from "rxjs";
import { RowArgs } from "../rendering/common/row-args";
import { SelectionEvent } from "./selection.service";
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class Selection {
    protected grid: GridComponent;
    protected cd: ChangeDetectorRef;
    /**
     * Defines the collection that will store the selected item keys.
     */
    selectedKeys: any[];
    /**
     * Defines the item key that will be stored in the `selectedKeys` collection.
     */
    selectionKey: string | ((context: RowArgs) => any);
    /**
     * Fires when the `selectedKeys` collection has been updated.
     */
    selectedKeysChange: EventEmitter<any[]>;
    protected selectionChangeSubscription: Subscription;
    constructor(grid: GridComponent, cd: ChangeDetectorRef);
    protected init(): void;
    /**
     * @hidden
     */
    destroy(): void;
    /**
     * @hidden
     */
    reset(): void;
    protected getItemKey(row: RowArgs): any;
    protected onSelectionChange(selection: SelectionEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Selection>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<Selection, never, never, {
    "selectedKeys": "selectedKeys";
    "selectionKey": "kendoGridSelectBy";
}, {
    "selectedKeysChange": "selectedKeysChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLWRlZmF1bHQuZC50cyIsInNvdXJjZXMiOlsic2VsZWN0aW9uLWRlZmF1bHQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdyaWRDb21wb25lbnQgfSBmcm9tIFwiLi4vZ3JpZC5jb21wb25lbnRcIjtcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBSb3dBcmdzIH0gZnJvbSBcIi4uL3JlbmRlcmluZy9jb21tb24vcm93LWFyZ3NcIjtcbmltcG9ydCB7IFNlbGVjdGlvbkV2ZW50IH0gZnJvbSBcIi4vc2VsZWN0aW9uLnNlcnZpY2VcIjtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZWxlY3Rpb24ge1xuICAgIHByb3RlY3RlZCBncmlkOiBHcmlkQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgY29sbGVjdGlvbiB0aGF0IHdpbGwgc3RvcmUgdGhlIHNlbGVjdGVkIGl0ZW0ga2V5cy5cbiAgICAgKi9cbiAgICBzZWxlY3RlZEtleXM6IGFueVtdO1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGl0ZW0ga2V5IHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIGBzZWxlY3RlZEtleXNgIGNvbGxlY3Rpb24uXG4gICAgICovXG4gICAgc2VsZWN0aW9uS2V5OiBzdHJpbmcgfCAoKGNvbnRleHQ6IFJvd0FyZ3MpID0+IGFueSk7XG4gICAgLyoqXG4gICAgICogRmlyZXMgd2hlbiB0aGUgYHNlbGVjdGVkS2V5c2AgY29sbGVjdGlvbiBoYXMgYmVlbiB1cGRhdGVkLlxuICAgICAqL1xuICAgIHNlbGVjdGVkS2V5c0NoYW5nZTogRXZlbnRFbWl0dGVyPGFueVtdPjtcbiAgICBwcm90ZWN0ZWQgc2VsZWN0aW9uQ2hhbmdlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZ3JpZDogR3JpZENvbXBvbmVudCwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBwcm90ZWN0ZWQgaW5pdCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBkZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlc2V0KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGdldEl0ZW1LZXkocm93OiBSb3dBcmdzKTogYW55O1xuICAgIHByb3RlY3RlZCBvblNlbGVjdGlvbkNoYW5nZShzZWxlY3Rpb246IFNlbGVjdGlvbkV2ZW50KTogdm9pZDtcbn1cbiJdfQ==