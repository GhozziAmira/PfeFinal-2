/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnChanges, SimpleChanges, OnInit, OnDestroy } from '@angular/core';
import { PagerSettings } from './pager-settings';
import { PageChangeEvent } from '../data/change-event-args.interface';
import { PagerTemplateDirective } from "./pager-template.directive";
import { PagerContextService } from "./pager-context.service";
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class PagerComponent implements OnChanges, OnInit, OnDestroy {
    private pagerContext;
    total: number;
    skip: number;
    pageSize: number;
    options: PagerSettings | boolean;
    template: PagerTemplateDirective;
    pageChange: EventEmitter<PageChangeEvent>;
    readonly pagerWrapClass: boolean;
    readonly gridPagerClass: boolean;
    readonly widgetClass: boolean;
    settings: PagerSettings;
    readonly totalPages: number;
    readonly currentPage: number;
    readonly templateContext: any;
    private pageChangeSubscription;
    private _templateContext;
    constructor(pagerContext: PagerContextService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    changePage(event: PageChangeEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PagerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PagerComponent, "kendo-pager", never, {
    "total": "total";
    "skip": "skip";
    "options": "options";
    "pageSize": "pageSize";
    "template": "template";
}, {
    "pageChange": "pageChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBhZ2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIE9uSW5pdCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYWdlclNldHRpbmdzIH0gZnJvbSAnLi9wYWdlci1zZXR0aW5ncyc7XG5pbXBvcnQgeyBQYWdlQ2hhbmdlRXZlbnQgfSBmcm9tICcuLi9kYXRhL2NoYW5nZS1ldmVudC1hcmdzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQYWdlclRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSBcIi4vcGFnZXItdGVtcGxhdGUuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBQYWdlckNvbnRleHRTZXJ2aWNlIH0gZnJvbSBcIi4vcGFnZXItY29udGV4dC5zZXJ2aWNlXCI7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGFnZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBhZ2VyQ29udGV4dDtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIHNraXA6IG51bWJlcjtcbiAgICBwYWdlU2l6ZTogbnVtYmVyO1xuICAgIG9wdGlvbnM6IFBhZ2VyU2V0dGluZ3MgfCBib29sZWFuO1xuICAgIHRlbXBsYXRlOiBQYWdlclRlbXBsYXRlRGlyZWN0aXZlO1xuICAgIHBhZ2VDaGFuZ2U6IEV2ZW50RW1pdHRlcjxQYWdlQ2hhbmdlRXZlbnQ+O1xuICAgIHJlYWRvbmx5IHBhZ2VyV3JhcENsYXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGdyaWRQYWdlckNsYXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHdpZGdldENsYXNzOiBib29sZWFuO1xuICAgIHNldHRpbmdzOiBQYWdlclNldHRpbmdzO1xuICAgIHJlYWRvbmx5IHRvdGFsUGFnZXM6IG51bWJlcjtcbiAgICByZWFkb25seSBjdXJyZW50UGFnZTogbnVtYmVyO1xuICAgIHJlYWRvbmx5IHRlbXBsYXRlQ29udGV4dDogYW55O1xuICAgIHByaXZhdGUgcGFnZUNoYW5nZVN1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIF90ZW1wbGF0ZUNvbnRleHQ7XG4gICAgY29uc3RydWN0b3IocGFnZXJDb250ZXh0OiBQYWdlckNvbnRleHRTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY2hhbmdlUGFnZShldmVudDogUGFnZUNoYW5nZUV2ZW50KTogdm9pZDtcbn1cbiJdfQ==