/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ColumnBase } from '../columns/column-base';
import { DraggableDirective } from '@progress/kendo-angular-common';
import { ColumnResizingService } from './column-resizing.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnHandleDirective implements OnInit, OnDestroy {
    draggable: DraggableDirective;
    private element;
    private service;
    private zone;
    private cdr;
    private localization;
    columns: Array<ColumnBase>;
    column: ColumnBase;
    readonly visible: string;
    readonly leftStyle: number | null;
    readonly rightStyle: number | null;
    private subscriptions;
    private rtl;
    autoFit(): void;
    constructor(draggable: DraggableDirective, element: ElementRef, service: ColumnResizingService, zone: NgZone, cdr: ChangeDetectorRef, localization: LocalizationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private shouldUpdate;
    private initColumnWidth;
    private initState;
    private resize;
    private sizeToFit;
    private updateWidth;
    private columnsForLevel;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnHandleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ColumnHandleDirective, "[kendoGridColumnHandle]", never, {
    "columns": "columns";
    "column": "column";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWhhbmRsZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiY29sdW1uLWhhbmRsZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgTmdab25lLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgQ29sdW1uQmFzZSB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLWJhc2UnO1xuaW1wb3J0IHsgRHJhZ2dhYmxlRGlyZWN0aXZlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItY29tbW9uJztcbmltcG9ydCB7IENvbHVtblJlc2l6aW5nU2VydmljZSB9IGZyb20gJy4vY29sdW1uLXJlc2l6aW5nLnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbHVtbkhhbmRsZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBkcmFnZ2FibGU6IERyYWdnYWJsZURpcmVjdGl2ZTtcbiAgICBwcml2YXRlIGVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBzZXJ2aWNlO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbjtcbiAgICBjb2x1bW5zOiBBcnJheTxDb2x1bW5CYXNlPjtcbiAgICBjb2x1bW46IENvbHVtbkJhc2U7XG4gICAgcmVhZG9ubHkgdmlzaWJsZTogc3RyaW5nO1xuICAgIHJlYWRvbmx5IGxlZnRTdHlsZTogbnVtYmVyIHwgbnVsbDtcbiAgICByZWFkb25seSByaWdodFN0eWxlOiBudW1iZXIgfCBudWxsO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBwcml2YXRlIHJ0bDtcbiAgICBhdXRvRml0KCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoZHJhZ2dhYmxlOiBEcmFnZ2FibGVEaXJlY3RpdmUsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHNlcnZpY2U6IENvbHVtblJlc2l6aW5nU2VydmljZSwgem9uZTogTmdab25lLCBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIHNob3VsZFVwZGF0ZTtcbiAgICBwcml2YXRlIGluaXRDb2x1bW5XaWR0aDtcbiAgICBwcml2YXRlIGluaXRTdGF0ZTtcbiAgICBwcml2YXRlIHJlc2l6ZTtcbiAgICBwcml2YXRlIHNpemVUb0ZpdDtcbiAgICBwcml2YXRlIHVwZGF0ZVdpZHRoO1xuICAgIHByaXZhdGUgY29sdW1uc0ZvckxldmVsO1xufVxuIl19