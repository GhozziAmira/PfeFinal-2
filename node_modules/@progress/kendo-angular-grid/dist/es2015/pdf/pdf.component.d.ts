/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnDestroy, NgZone, QueryList } from '@angular/core';
import { Subscription } from 'rxjs';
import { SuspendService } from '../scrolling/suspend.service';
import { PDFService } from './pdf.service';
import { PDFMarginComponent } from './pdf-margin.component';
import { PDFTemplateDirective } from './pdf-template.directive';
import { ColumnBase } from '../columns/column-base';
import { DrawOptions } from '@progress/kendo-drawing';
import { PDFExportComponent } from '@progress/kendo-angular-pdf-export';
/**
 * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).
 */
import * as ɵngcc0 from '@angular/core';
export declare class PDFComponent extends PDFExportComponent implements OnDestroy {
    protected pdfService: PDFService;
    protected suspendService: SuspendService;
    protected ngZone: NgZone;
    /**
     * Exports all Grid pages, starting from the first one.
     */
    allPages: boolean;
    columns: QueryList<ColumnBase>;
    /**
     * @hidden
     */
    marginComponent: PDFMarginComponent;
    /**
     * @hidden
     */
    pageTemplateDirective: PDFTemplateDirective;
    protected progress: HTMLElement;
    protected component: any;
    protected container: HTMLElement;
    protected skip: number;
    protected pageSize: number;
    protected originalHeight: string;
    protected originalOverflow: string;
    protected saveSubscription: Subscription;
    protected drawSubscription: Subscription;
    protected renderAllPages: boolean;
    protected originalColumns: ColumnBase[];
    constructor(pdfService: PDFService, suspendService: SuspendService, ngZone: NgZone, element: ElementRef);
    ngOnDestroy(): void;
    protected savePDF(component: any): void;
    protected drawPDF({ component, promise }: any): void;
    protected createPDF(component: any, callback: any): void;
    protected initProgress(): void;
    protected applyScroll(overlay: HTMLElement): void;
    protected draw(): void;
    protected createExportGroup(promise: any): void;
    protected createExportElement(callback: any): void;
    protected drawOptions(): DrawOptions;
    protected cleanup(): void;
    protected removeContainer(): void;
    protected changePage(skip: number, _take: number, callback: () => void, columns?: any[]): void;
    protected changeColumns(columns: any[], callback: () => void): void;
    protected reset(): void;
    protected onStable(callback: () => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PDFComponent, "kendo-grid-pdf", never, {
    "allPages": "allPages";
}, {}, ["marginComponent", "pageTemplateDirective", "columns"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwZGYuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBOZ1pvbmUsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTdXNwZW5kU2VydmljZSB9IGZyb20gJy4uL3Njcm9sbGluZy9zdXNwZW5kLnNlcnZpY2UnO1xuaW1wb3J0IHsgUERGU2VydmljZSB9IGZyb20gJy4vcGRmLnNlcnZpY2UnO1xuaW1wb3J0IHsgUERGTWFyZ2luQ29tcG9uZW50IH0gZnJvbSAnLi9wZGYtbWFyZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQREZUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vcGRmLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBDb2x1bW5CYXNlIH0gZnJvbSAnLi4vY29sdW1ucy9jb2x1bW4tYmFzZSc7XG5pbXBvcnQgeyBEcmF3T3B0aW9ucyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kcmF3aW5nJztcbmltcG9ydCB7IFBERkV4cG9ydENvbXBvbmVudCB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXBkZi1leHBvcnQnO1xuLyoqXG4gKiBDb25maWd1cmVzIHRoZSBzZXR0aW5ncyBmb3IgdGhlIGV4cG9ydCBvZiBHcmlkIGluIFBERiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHBkZmV4cG9ydF9ncmlkICV9KSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBERkNvbXBvbmVudCBleHRlbmRzIFBERkV4cG9ydENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHBkZlNlcnZpY2U6IFBERlNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIHN1c3BlbmRTZXJ2aWNlOiBTdXNwZW5kU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgbmdab25lOiBOZ1pvbmU7XG4gICAgLyoqXG4gICAgICogRXhwb3J0cyBhbGwgR3JpZCBwYWdlcywgc3RhcnRpbmcgZnJvbSB0aGUgZmlyc3Qgb25lLlxuICAgICAqL1xuICAgIGFsbFBhZ2VzOiBib29sZWFuO1xuICAgIGNvbHVtbnM6IFF1ZXJ5TGlzdDxDb2x1bW5CYXNlPjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbWFyZ2luQ29tcG9uZW50OiBQREZNYXJnaW5Db21wb25lbnQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHBhZ2VUZW1wbGF0ZURpcmVjdGl2ZTogUERGVGVtcGxhdGVEaXJlY3RpdmU7XG4gICAgcHJvdGVjdGVkIHByb2dyZXNzOiBIVE1MRWxlbWVudDtcbiAgICBwcm90ZWN0ZWQgY29tcG9uZW50OiBhbnk7XG4gICAgcHJvdGVjdGVkIGNvbnRhaW5lcjogSFRNTEVsZW1lbnQ7XG4gICAgcHJvdGVjdGVkIHNraXA6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgcGFnZVNpemU6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgb3JpZ2luYWxIZWlnaHQ6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgb3JpZ2luYWxPdmVyZmxvdzogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBzYXZlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJvdGVjdGVkIGRyYXdTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBwcm90ZWN0ZWQgcmVuZGVyQWxsUGFnZXM6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIG9yaWdpbmFsQ29sdW1uczogQ29sdW1uQmFzZVtdO1xuICAgIGNvbnN0cnVjdG9yKHBkZlNlcnZpY2U6IFBERlNlcnZpY2UsIHN1c3BlbmRTZXJ2aWNlOiBTdXNwZW5kU2VydmljZSwgbmdab25lOiBOZ1pvbmUsIGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHNhdmVQREYoY29tcG9uZW50OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBkcmF3UERGKHsgY29tcG9uZW50LCBwcm9taXNlIH06IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZVBERihjb21wb25lbnQ6IGFueSwgY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGluaXRQcm9ncmVzcygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBhcHBseVNjcm9sbChvdmVybGF5OiBIVE1MRWxlbWVudCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGRyYXcoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlRXhwb3J0R3JvdXAocHJvbWlzZTogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlRXhwb3J0RWxlbWVudChjYWxsYmFjazogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZHJhd09wdGlvbnMoKTogRHJhd09wdGlvbnM7XG4gICAgcHJvdGVjdGVkIGNsZWFudXAoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVtb3ZlQ29udGFpbmVyKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNoYW5nZVBhZ2Uoc2tpcDogbnVtYmVyLCBfdGFrZTogbnVtYmVyLCBjYWxsYmFjazogKCkgPT4gdm9pZCwgY29sdW1ucz86IGFueVtdKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY2hhbmdlQ29sdW1ucyhjb2x1bW5zOiBhbnlbXSwgY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHByb3RlY3RlZCByZXNldCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvblN0YWJsZShjYWxsYmFjazogKCkgPT4gdm9pZCk6IHZvaWQ7XG59XG4iXX0=