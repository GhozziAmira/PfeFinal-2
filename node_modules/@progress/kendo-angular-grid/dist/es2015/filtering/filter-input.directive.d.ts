/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, AfterViewInit, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class FilterInputDirective implements AfterViewInit, OnDestroy, OnChanges {
    change: EventEmitter<string>;
    composing: boolean;
    filterDelay: number;
    value: string;
    disabled: boolean;
    private accessor;
    private changeRequests;
    private changeRequestsSubscription;
    private unsubscribeEvents;
    constructor(valueAccessors: ControlValueAccessor[], ngZone: NgZone, element: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    private subscribeChanges;
    private unsubscribeChanges;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FilterInputDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FilterInputDirective, "[kendoFilterInput]", never, {
    "filterDelay": "filterDelay";
    "value": "value";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWlucHV0LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJmaWx0ZXItaW5wdXQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBBZnRlclZpZXdJbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZpbHRlcklucHV0RGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgY29tcG9zaW5nOiBib29sZWFuO1xuICAgIGZpbHRlckRlbGF5OiBudW1iZXI7XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBwcml2YXRlIGFjY2Vzc29yO1xuICAgIHByaXZhdGUgY2hhbmdlUmVxdWVzdHM7XG4gICAgcHJpdmF0ZSBjaGFuZ2VSZXF1ZXN0c1N1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlRXZlbnRzO1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlQWNjZXNzb3JzOiBDb250cm9sVmFsdWVBY2Nlc3NvcltdLCBuZ1pvbmU6IE5nWm9uZSwgZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogYW55KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgc3Vic2NyaWJlQ2hhbmdlcztcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlQ2hhbmdlcztcbn1cbiJdfQ==