/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';
import { ColumnComponent } from "../../columns/column.component";
import { FilterService } from '../filter.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { DateFilterComponent } from '../date-filter.component';
/**
 * Represents a date-filter menu component.
 *
 * @example
 *  ```html-no-run
 *      <kendo-grid-column field="OrderDate" title="Order Date">
 *          <ng-template kendoGridFilterMenuTemplate let-filter let-column="column" let-filterService="filterService">
 *            <kendo-grid-date-filter-menu
 *                [column]="column"
 *                [filter]="filter"
 *                [filterService]="filterService"
 *                >
 *            </kendo-grid-date-filter-menu>
 *          </ng-template>
 *      </kendo-grid-column>
 *   ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DateFilterMenuComponent extends DateFilterComponent {
    logicOperators: Array<{
        text: string;
        value: "and" | "or";
    }>;
    /**
     * @hidden
     */
    readonly hostClasses: boolean;
    /**
     * The column with which the filter is associated.
     * @type {ColumnComponent}
     */
    column: ColumnComponent;
    /**
     * The current menu filter.
     * @type {CompositeFilterDescriptor}
     */
    filter: CompositeFilterDescriptor;
    /**
     * Determines if the inputs of second criteria will be displayed.
     */
    extra: boolean;
    /**
     * The `FilterService` instance which is responsible for handling the changes in the filter descriptor.
     */
    filterService: FilterService;
    constructor(localization: LocalizationService);
    readonly firstFilter: FilterDescriptor;
    readonly secondFilter: FilterDescriptor;
    logicChange(value: 'and' | 'or'): void;
    protected localizationChange(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateFilterMenuComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateFilterMenuComponent, "kendo-grid-date-filter-menu", never, {
    "filter": "filter";
    "extra": "extra";
    "column": "column";
    "filterService": "filterService";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1maWx0ZXItbWVudS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZS1maWx0ZXItbWVudS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yLCBGaWx0ZXJEZXNjcmlwdG9yIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGEtcXVlcnknO1xuaW1wb3J0IHsgQ29sdW1uQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgRmlsdGVyU2VydmljZSB9IGZyb20gJy4uL2ZpbHRlci5zZXJ2aWNlJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IERhdGVGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuLi9kYXRlLWZpbHRlci5jb21wb25lbnQnO1xuLyoqXG4gKiBSZXByZXNlbnRzIGEgZGF0ZS1maWx0ZXIgbWVudSBjb21wb25lbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqICBgYGBodG1sLW5vLXJ1blxuICogICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4gZmllbGQ9XCJPcmRlckRhdGVcIiB0aXRsZT1cIk9yZGVyIERhdGVcIj5cbiAqICAgICAgICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0dyaWRGaWx0ZXJNZW51VGVtcGxhdGUgbGV0LWZpbHRlciBsZXQtY29sdW1uPVwiY29sdW1uXCIgbGV0LWZpbHRlclNlcnZpY2U9XCJmaWx0ZXJTZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgIDxrZW5kby1ncmlkLWRhdGUtZmlsdGVyLW1lbnVcbiAqICAgICAgICAgICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAqICAgICAgICAgICAgICAgIFtmaWx0ZXJdPVwiZmlsdGVyXCJcbiAqICAgICAgICAgICAgICAgIFtmaWx0ZXJTZXJ2aWNlXT1cImZpbHRlclNlcnZpY2VcIlxuICogICAgICAgICAgICAgICAgPlxuICogICAgICAgICAgICA8L2tlbmRvLWdyaWQtZGF0ZS1maWx0ZXItbWVudT5cbiAqICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgICAgIDwva2VuZG8tZ3JpZC1jb2x1bW4+XG4gKiAgIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlRmlsdGVyTWVudUNvbXBvbmVudCBleHRlbmRzIERhdGVGaWx0ZXJDb21wb25lbnQge1xuICAgIGxvZ2ljT3BlcmF0b3JzOiBBcnJheTx7XG4gICAgICAgIHRleHQ6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IFwiYW5kXCIgfCBcIm9yXCI7XG4gICAgfT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhvc3RDbGFzc2VzOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBjb2x1bW4gd2l0aCB3aGljaCB0aGUgZmlsdGVyIGlzIGFzc29jaWF0ZWQuXG4gICAgICogQHR5cGUge0NvbHVtbkNvbXBvbmVudH1cbiAgICAgKi9cbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBtZW51IGZpbHRlci5cbiAgICAgKiBAdHlwZSB7Q29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyBpZiB0aGUgaW5wdXRzIG9mIHNlY29uZCBjcml0ZXJpYSB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgKi9cbiAgICBleHRyYTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgYEZpbHRlclNlcnZpY2VgIGluc3RhbmNlIHdoaWNoIGlzIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyB0aGUgY2hhbmdlcyBpbiB0aGUgZmlsdGVyIGRlc2NyaXB0b3IuXG4gICAgICovXG4gICAgZmlsdGVyU2VydmljZTogRmlsdGVyU2VydmljZTtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UpO1xuICAgIHJlYWRvbmx5IGZpcnN0RmlsdGVyOiBGaWx0ZXJEZXNjcmlwdG9yO1xuICAgIHJlYWRvbmx5IHNlY29uZEZpbHRlcjogRmlsdGVyRGVzY3JpcHRvcjtcbiAgICBsb2dpY0NoYW5nZSh2YWx1ZTogJ2FuZCcgfCAnb3InKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgbG9jYWxpemF0aW9uQ2hhbmdlKCk6IHZvaWQ7XG59XG4iXX0=