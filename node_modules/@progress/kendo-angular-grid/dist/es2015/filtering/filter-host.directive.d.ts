/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Type, ViewContainerRef, OnInit, OnDestroy, OnChanges, ComponentRef, ComponentFactoryResolver, SimpleChange } from '@angular/core';
import { ColumnComponent } from '../columns/column.component';
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { FilterComponent } from './filter-component.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type Context = {
    filter: CompositeFilterDescriptor;
    column: ColumnComponent;
};
/**
 * @hidden
 */
export declare abstract class FilterHostDirective implements OnInit, OnDestroy, OnChanges {
    private host;
    private resolver;
    column: ColumnComponent;
    filter: CompositeFilterDescriptor;
    protected component: ComponentRef<FilterComponent>;
    constructor(host: ViewContainerRef, resolver: ComponentFactoryResolver);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    protected abstract componentType(): Type<FilterComponent>;
    protected initComponent({ column, filter }: Context): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FilterHostDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FilterHostDirective, never, never, {
    "column": "column";
    "filter": "filter";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWhvc3QuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImZpbHRlci1ob3N0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7QUFXQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUeXBlLCBWaWV3Q29udGFpbmVyUmVmLCBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBDb21wb25lbnRSZWYsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgU2ltcGxlQ2hhbmdlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvciB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kYXRhLXF1ZXJ5JztcbmltcG9ydCB7IEZpbHRlckNvbXBvbmVudCB9IGZyb20gJy4vZmlsdGVyLWNvbXBvbmVudC5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIHR5cGUgQ29udGV4dCA9IHtcbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgY29sdW1uOiBDb2x1bW5Db21wb25lbnQ7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGFic3RyYWN0IGNsYXNzIEZpbHRlckhvc3REaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGhvc3Q7XG4gICAgcHJpdmF0ZSByZXNvbHZlcjtcbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgcHJvdGVjdGVkIGNvbXBvbmVudDogQ29tcG9uZW50UmVmPEZpbHRlckNvbXBvbmVudD47XG4gICAgY29uc3RydWN0b3IoaG9zdDogVmlld0NvbnRhaW5lclJlZiwgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IHtcbiAgICAgICAgW3Byb3BlcnR5TmFtZTogc3RyaW5nXTogU2ltcGxlQ2hhbmdlO1xuICAgIH0pOiB2b2lkO1xuICAgIHByb3RlY3RlZCBhYnN0cmFjdCBjb21wb25lbnRUeXBlKCk6IFR5cGU8RmlsdGVyQ29tcG9uZW50PjtcbiAgICBwcm90ZWN0ZWQgaW5pdENvbXBvbmVudCh7IGNvbHVtbiwgZmlsdGVyIH06IENvbnRleHQpOiB2b2lkO1xufVxuIl19