/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Used for rendering the list item content.
 *
 * To define the item template, nest a `<ng-template>` tag with the `kendo<ComponentName>ItemTemplate` directive inside the component tag.
 *
 * For the DropDownButton, use the `kendoDropDownButtonItemTemplate` directive.
 * For the SplitButton, use the `kendoSplitButtonItemTemplate` directive.
 *
 * The template context is set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.
 *
 * @example
 * ```ts
 * _@Component({
 * selector: 'my-app',
 * template: `
 *  <kendo-splitbutton [data]="listItems">
 *    <ng-template kendoSplitButtonItemTemplate let-dataItem>
 *      <span>{{dataItem}} option</span>
 *    </ng-template>
 *  </kendo-splitbutton>
 *  <kendo-dropdownbutton [data]="listItems">
 *    <ng-template kendoDropDownButtonItemTemplate let-dataItem>
 *      <span>{{dataItem}} option</span>
 *    </ng-template>
 *  </kendo-dropdownbutton>
 * `
 * })
 * class AppComponent {
 *   public listItems: Array<any> = [{
 *      text: 'item1',
 *      icon: 'refresh',
 *      disabled: false,
 *      click: (dataItem: any) => {
 *          //action
 *      }
 *  }, {
 *      text: 'item2',
 *      icon: 'refresh',
 *      disabled: false,
 *      click: (dataItem: any) => {
 *          //action
 *      }
 *  }]
 * }
 * ```
 *
 * For more examples, refer to the article on the [DropDownList templates]({% slug overview_ddl %}#templates).
 */
import * as ɵngcc0 from '@angular/core';
export declare class ButtonItemTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonItemTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ButtonItemTemplateDirective, "[kendoDropDownButtonItemTemplate],[kendoSplitButtonItemTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWl0ZW0tdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImJ1dHRvbi1pdGVtLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxREE7Ozs7O0FBR0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBVc2VkIGZvciByZW5kZXJpbmcgdGhlIGxpc3QgaXRlbSBjb250ZW50LlxuICpcbiAqIFRvIGRlZmluZSB0aGUgaXRlbSB0ZW1wbGF0ZSwgbmVzdCBhIGA8bmctdGVtcGxhdGU+YCB0YWcgd2l0aCB0aGUgYGtlbmRvPENvbXBvbmVudE5hbWU+SXRlbVRlbXBsYXRlYCBkaXJlY3RpdmUgaW5zaWRlIHRoZSBjb21wb25lbnQgdGFnLlxuICpcbiAqIEZvciB0aGUgRHJvcERvd25CdXR0b24sIHVzZSB0aGUgYGtlbmRvRHJvcERvd25CdXR0b25JdGVtVGVtcGxhdGVgIGRpcmVjdGl2ZS5cbiAqIEZvciB0aGUgU3BsaXRCdXR0b24sIHVzZSB0aGUgYGtlbmRvU3BsaXRCdXR0b25JdGVtVGVtcGxhdGVgIGRpcmVjdGl2ZS5cbiAqXG4gKiBUaGUgdGVtcGxhdGUgY29udGV4dCBpcyBzZXQgdG8gdGhlIGN1cnJlbnQgY29tcG9uZW50LiBUbyBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtLCB1c2UgdGhlIGBsZXQtZGF0YUl0ZW1gIGRpcmVjdGl2ZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIF9AQ29tcG9uZW50KHtcbiAqIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqIHRlbXBsYXRlOiBgXG4gKiAgPGtlbmRvLXNwbGl0YnV0dG9uIFtkYXRhXT1cImxpc3RJdGVtc1wiPlxuICogICAgPG5nLXRlbXBsYXRlIGtlbmRvU3BsaXRCdXR0b25JdGVtVGVtcGxhdGUgbGV0LWRhdGFJdGVtPlxuICogICAgICA8c3Bhbj57e2RhdGFJdGVtfX0gb3B0aW9uPC9zcGFuPlxuICogICAgPC9uZy10ZW1wbGF0ZT5cbiAqICA8L2tlbmRvLXNwbGl0YnV0dG9uPlxuICogIDxrZW5kby1kcm9wZG93bmJ1dHRvbiBbZGF0YV09XCJsaXN0SXRlbXNcIj5cbiAqICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0Ryb3BEb3duQnV0dG9uSXRlbVRlbXBsYXRlIGxldC1kYXRhSXRlbT5cbiAqICAgICAgPHNwYW4+e3tkYXRhSXRlbX19IG9wdGlvbjwvc3Bhbj5cbiAqICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgPC9rZW5kby1kcm9wZG93bmJ1dHRvbj5cbiAqIGBcbiAqIH0pXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgbGlzdEl0ZW1zOiBBcnJheTxhbnk+ID0gW3tcbiAqICAgICAgdGV4dDogJ2l0ZW0xJyxcbiAqICAgICAgaWNvbjogJ3JlZnJlc2gnLFxuICogICAgICBkaXNhYmxlZDogZmFsc2UsXG4gKiAgICAgIGNsaWNrOiAoZGF0YUl0ZW06IGFueSkgPT4ge1xuICogICAgICAgICAgLy9hY3Rpb25cbiAqICAgICAgfVxuICogIH0sIHtcbiAqICAgICAgdGV4dDogJ2l0ZW0yJyxcbiAqICAgICAgaWNvbjogJ3JlZnJlc2gnLFxuICogICAgICBkaXNhYmxlZDogZmFsc2UsXG4gKiAgICAgIGNsaWNrOiAoZGF0YUl0ZW06IGFueSkgPT4ge1xuICogICAgICAgICAgLy9hY3Rpb25cbiAqICAgICAgfVxuICogIH1dXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBGb3IgbW9yZSBleGFtcGxlcywgcmVmZXIgdG8gdGhlIGFydGljbGUgb24gdGhlIFtEcm9wRG93bkxpc3QgdGVtcGxhdGVzXSh7JSBzbHVnIG92ZXJ2aWV3X2RkbCAlfSN0ZW1wbGF0ZXMpLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCdXR0b25JdGVtVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KTtcbn1cbiJdfQ==