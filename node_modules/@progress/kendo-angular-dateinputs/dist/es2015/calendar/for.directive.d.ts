/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { DoCheck, IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef, TrackByFunction, ViewContainerRef } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class KForOfContext<T> {
    $implicit: T;
    kForOf: NgIterable<T>;
    index: number;
    count: number;
    constructor($implicit: T, kForOf: NgIterable<T>, index: number, count: number);
    readonly first: boolean;
    readonly last: boolean;
    readonly even: boolean;
    readonly odd: boolean;
}
/**
 * @hidden
 */
export declare class KForOf<T> implements DoCheck, OnChanges {
    private _viewContainer;
    private _template;
    private _differs;
    kForOf: NgIterable<T>;
    kForTrackBy: TrackByFunction<T>;
    private _differ;
    constructor(_viewContainer: ViewContainerRef, _template: TemplateRef<KForOfContext<T>>, _differs: IterableDiffers);
    kForTemplate: TemplateRef<KForOfContext<T>>;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    private _applyChanges;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<KForOf<any>>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<KForOf<any>, "[kFor][kForOf]", never, {
    "kForTemplate": "kForTemplate";
    "kForOf": "kForOf";
    "kForTrackBy": "kForTrackBy";
}, {}, never>;
}
/**
 * @hidden
 */
export declare function getTypeNameForDebugging(type: any): string;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJmb3IuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IERvQ2hlY2ssIEl0ZXJhYmxlRGlmZmVycywgTmdJdGVyYWJsZSwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiwgVHJhY2tCeUZ1bmN0aW9uLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgS0Zvck9mQ29udGV4dDxUPiB7XG4gICAgJGltcGxpY2l0OiBUO1xuICAgIGtGb3JPZjogTmdJdGVyYWJsZTxUPjtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGNvdW50OiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IoJGltcGxpY2l0OiBULCBrRm9yT2Y6IE5nSXRlcmFibGU8VD4sIGluZGV4OiBudW1iZXIsIGNvdW50OiBudW1iZXIpO1xuICAgIHJlYWRvbmx5IGZpcnN0OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGxhc3Q6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZXZlbjogYm9vbGVhbjtcbiAgICByZWFkb25seSBvZGQ6IGJvb2xlYW47XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgS0Zvck9mPFQ+IGltcGxlbWVudHMgRG9DaGVjaywgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIF92aWV3Q29udGFpbmVyO1xuICAgIHByaXZhdGUgX3RlbXBsYXRlO1xuICAgIHByaXZhdGUgX2RpZmZlcnM7XG4gICAga0Zvck9mOiBOZ0l0ZXJhYmxlPFQ+O1xuICAgIGtGb3JUcmFja0J5OiBUcmFja0J5RnVuY3Rpb248VD47XG4gICAgcHJpdmF0ZSBfZGlmZmVyO1xuICAgIGNvbnN0cnVjdG9yKF92aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmLCBfdGVtcGxhdGU6IFRlbXBsYXRlUmVmPEtGb3JPZkNvbnRleHQ8VD4+LCBfZGlmZmVyczogSXRlcmFibGVEaWZmZXJzKTtcbiAgICBrRm9yVGVtcGxhdGU6IFRlbXBsYXRlUmVmPEtGb3JPZkNvbnRleHQ8VD4+O1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xuICAgIHByaXZhdGUgX2FwcGx5Q2hhbmdlcztcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBnZXRUeXBlTmFtZUZvckRlYnVnZ2luZyh0eXBlOiBhbnkpOiBzdHJpbmc7XG4iXX0=