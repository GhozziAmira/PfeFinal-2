/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, OnChanges, TemplateRef } from '@angular/core';
import { BusViewService } from './services/bus-view.service';
import { ViewService } from './models/view-service.interface';
import { SelectionRangeEnd } from './models/selection-range-end.type';
import { SelectionRange } from './models/selection-range.interface';
import { Action } from './models/navigation-action.enum';
import { CalendarViewEnum } from './models/view.enum';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class HorizontalViewListComponent implements OnChanges {
    private bus;
    private cdr;
    cellTemplateRef: TemplateRef<any>;
    weekNumberTemplateRef: TemplateRef<any>;
    headerTitleTemplateRef: TemplateRef<any>;
    activeRangeEnd: SelectionRangeEnd;
    activeView: CalendarViewEnum;
    cellUID: string;
    focusedDate: Date;
    isActive: boolean;
    min: Date;
    max: Date;
    selectionRange: SelectionRange;
    value: Date;
    views: number;
    weekNumber: boolean;
    valueChange: EventEmitter<Date>;
    cellEnter: EventEmitter<Date>;
    cellLeave: EventEmitter<Date>;
    readonly getComponentClass: boolean;
    readonly getComponentMonthClass: boolean;
    readonly getComponentYearClass: boolean;
    readonly getComponentDecadeClass: boolean;
    readonly getComponentCenturyClass: boolean;
    service: ViewService;
    activeDate: Date;
    dates: Date[];
    skip: number;
    total: number;
    private showWeekNumbers;
    constructor(bus: BusViewService, cdr: ChangeDetectorRef);
    ngOnChanges(changes: any): void;
    initService(): void;
    handleDateChange(candidate: Date): void;
    isMonthView(): boolean;
    navigate(action: Action): Date;
    canNavigate(action: Action): boolean;
    private clampDate;
    private move;
    private isListInRange;
    private isInDates;
    private getTake;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HorizontalViewListComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HorizontalViewListComponent, "kendo-calendar-horizontal", never, {
    "activeView": "activeView";
    "isActive": "isActive";
    "min": "min";
    "max": "max";
    "views": "views";
    "weekNumber": "weekNumber";
    "focusedDate": "focusedDate";
    "cellTemplateRef": "cellTemplateRef";
    "weekNumberTemplateRef": "weekNumberTemplateRef";
    "headerTitleTemplateRef": "headerTitleTemplateRef";
    "activeRangeEnd": "activeRangeEnd";
    "cellUID": "cellUID";
    "selectionRange": "selectionRange";
    "value": "value";
}, {
    "valueChange": "valueChange";
    "cellEnter": "cellEnter";
    "cellLeave": "cellLeave";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9yaXpvbnRhbC12aWV3LWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhvcml6b250YWwtdmlldy1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFjQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJ1c1ZpZXdTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9idXMtdmlldy5zZXJ2aWNlJztcbmltcG9ydCB7IFZpZXdTZXJ2aWNlIH0gZnJvbSAnLi9tb2RlbHMvdmlldy1zZXJ2aWNlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25SYW5nZUVuZCB9IGZyb20gJy4vbW9kZWxzL3NlbGVjdGlvbi1yYW5nZS1lbmQudHlwZSc7XG5pbXBvcnQgeyBTZWxlY3Rpb25SYW5nZSB9IGZyb20gJy4vbW9kZWxzL3NlbGVjdGlvbi1yYW5nZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnLi9tb2RlbHMvbmF2aWdhdGlvbi1hY3Rpb24uZW51bSc7XG5pbXBvcnQgeyBDYWxlbmRhclZpZXdFbnVtIH0gZnJvbSAnLi9tb2RlbHMvdmlldy5lbnVtJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBIb3Jpem9udGFsVmlld0xpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgYnVzO1xuICAgIHByaXZhdGUgY2RyO1xuICAgIGNlbGxUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICB3ZWVrTnVtYmVyVGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGl0bGVUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBhY3RpdmVSYW5nZUVuZDogU2VsZWN0aW9uUmFuZ2VFbmQ7XG4gICAgYWN0aXZlVmlldzogQ2FsZW5kYXJWaWV3RW51bTtcbiAgICBjZWxsVUlEOiBzdHJpbmc7XG4gICAgZm9jdXNlZERhdGU6IERhdGU7XG4gICAgaXNBY3RpdmU6IGJvb2xlYW47XG4gICAgbWluOiBEYXRlO1xuICAgIG1heDogRGF0ZTtcbiAgICBzZWxlY3Rpb25SYW5nZTogU2VsZWN0aW9uUmFuZ2U7XG4gICAgdmFsdWU6IERhdGU7XG4gICAgdmlld3M6IG51bWJlcjtcbiAgICB3ZWVrTnVtYmVyOiBib29sZWFuO1xuICAgIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8RGF0ZT47XG4gICAgY2VsbEVudGVyOiBFdmVudEVtaXR0ZXI8RGF0ZT47XG4gICAgY2VsbExlYXZlOiBFdmVudEVtaXR0ZXI8RGF0ZT47XG4gICAgcmVhZG9ubHkgZ2V0Q29tcG9uZW50Q2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZ2V0Q29tcG9uZW50TW9udGhDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnRZZWFyQ2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZ2V0Q29tcG9uZW50RGVjYWRlQ2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZ2V0Q29tcG9uZW50Q2VudHVyeUNsYXNzOiBib29sZWFuO1xuICAgIHNlcnZpY2U6IFZpZXdTZXJ2aWNlO1xuICAgIGFjdGl2ZURhdGU6IERhdGU7XG4gICAgZGF0ZXM6IERhdGVbXTtcbiAgICBza2lwOiBudW1iZXI7XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBwcml2YXRlIHNob3dXZWVrTnVtYmVycztcbiAgICBjb25zdHJ1Y3RvcihidXM6IEJ1c1ZpZXdTZXJ2aWNlLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIGluaXRTZXJ2aWNlKCk6IHZvaWQ7XG4gICAgaGFuZGxlRGF0ZUNoYW5nZShjYW5kaWRhdGU6IERhdGUpOiB2b2lkO1xuICAgIGlzTW9udGhWaWV3KCk6IGJvb2xlYW47XG4gICAgbmF2aWdhdGUoYWN0aW9uOiBBY3Rpb24pOiBEYXRlO1xuICAgIGNhbk5hdmlnYXRlKGFjdGlvbjogQWN0aW9uKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGNsYW1wRGF0ZTtcbiAgICBwcml2YXRlIG1vdmU7XG4gICAgcHJpdmF0ZSBpc0xpc3RJblJhbmdlO1xuICAgIHByaXZhdGUgaXNJbkRhdGVzO1xuICAgIHByaXZhdGUgZ2V0VGFrZTtcbn1cbiJdfQ==