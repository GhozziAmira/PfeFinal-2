/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Action } from '../models/navigation-action.enum';
import { CellContext } from '../models/cell-context.interface';
import { ViewService } from '../models/view-service.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class CenturyViewService implements ViewService {
    addToDate(min: Date, skip: number): Date;
    datesList(start: Date, count: number): Date[];
    data(options: any): CellContext[][];
    isEqual(candidate: Date, expected: Date): boolean;
    isInArray(date: Date, dates: Date[]): boolean;
    isInRange(candidate: Date, min: Date, max: Date): boolean;
    beginningOfPeriod(date: Date): Date;
    isRangeStart(value: Date): boolean;
    move(value: Date, action: Action): Date;
    cellTitle(value: Date): string;
    navigationTitle(value?: Date): string;
    title(value?: Date): string;
    rowLength(_?: boolean): number;
    skip(value: Date, min: Date): number;
    total(min: Date, max: Date): number;
    value(current: Date): string;
    viewDate(date: Date, max: Date, viewsCount?: number): Date;
    private normalize;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CenturyViewService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CenturyViewService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VudHVyeS12aWV3LnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiY2VudHVyeS12aWV3LnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnLi4vbW9kZWxzL25hdmlnYXRpb24tYWN0aW9uLmVudW0nO1xuaW1wb3J0IHsgQ2VsbENvbnRleHQgfSBmcm9tICcuLi9tb2RlbHMvY2VsbC1jb250ZXh0LmludGVyZmFjZSc7XG5pbXBvcnQgeyBWaWV3U2VydmljZSB9IGZyb20gJy4uL21vZGVscy92aWV3LXNlcnZpY2UuaW50ZXJmYWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDZW50dXJ5Vmlld1NlcnZpY2UgaW1wbGVtZW50cyBWaWV3U2VydmljZSB7XG4gICAgYWRkVG9EYXRlKG1pbjogRGF0ZSwgc2tpcDogbnVtYmVyKTogRGF0ZTtcbiAgICBkYXRlc0xpc3Qoc3RhcnQ6IERhdGUsIGNvdW50OiBudW1iZXIpOiBEYXRlW107XG4gICAgZGF0YShvcHRpb25zOiBhbnkpOiBDZWxsQ29udGV4dFtdW107XG4gICAgaXNFcXVhbChjYW5kaWRhdGU6IERhdGUsIGV4cGVjdGVkOiBEYXRlKTogYm9vbGVhbjtcbiAgICBpc0luQXJyYXkoZGF0ZTogRGF0ZSwgZGF0ZXM6IERhdGVbXSk6IGJvb2xlYW47XG4gICAgaXNJblJhbmdlKGNhbmRpZGF0ZTogRGF0ZSwgbWluOiBEYXRlLCBtYXg6IERhdGUpOiBib29sZWFuO1xuICAgIGJlZ2lubmluZ09mUGVyaW9kKGRhdGU6IERhdGUpOiBEYXRlO1xuICAgIGlzUmFuZ2VTdGFydCh2YWx1ZTogRGF0ZSk6IGJvb2xlYW47XG4gICAgbW92ZSh2YWx1ZTogRGF0ZSwgYWN0aW9uOiBBY3Rpb24pOiBEYXRlO1xuICAgIGNlbGxUaXRsZSh2YWx1ZTogRGF0ZSk6IHN0cmluZztcbiAgICBuYXZpZ2F0aW9uVGl0bGUodmFsdWU/OiBEYXRlKTogc3RyaW5nO1xuICAgIHRpdGxlKHZhbHVlPzogRGF0ZSk6IHN0cmluZztcbiAgICByb3dMZW5ndGgoXz86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgc2tpcCh2YWx1ZTogRGF0ZSwgbWluOiBEYXRlKTogbnVtYmVyO1xuICAgIHRvdGFsKG1pbjogRGF0ZSwgbWF4OiBEYXRlKTogbnVtYmVyO1xuICAgIHZhbHVlKGN1cnJlbnQ6IERhdGUpOiBzdHJpbmc7XG4gICAgdmlld0RhdGUoZGF0ZTogRGF0ZSwgbWF4OiBEYXRlLCB2aWV3c0NvdW50PzogbnVtYmVyKTogRGF0ZTtcbiAgICBwcml2YXRlIG5vcm1hbGl6ZTtcbn1cbiJdfQ==