/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Renderer2, EventEmitter, ElementRef, OnChanges, OnInit, OnDestroy } from '@angular/core';
import { Direction } from './direction';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class SearchBarComponent implements OnChanges, OnInit, OnDestroy {
    private localization;
    direction: Direction;
    id: string;
    listId: string;
    tagListId: string;
    activeDescendant: string;
    noDataLabel: string;
    disabled: boolean;
    readonly: boolean;
    tabIndex: number;
    popupOpen: boolean;
    role: string;
    userInput: string;
    suggestedText: string;
    valueChange: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onNavigate: EventEmitter<any>;
    input: ElementRef;
    searchBarClass: boolean;
    readonly value: string;
    placeholder: string;
    private _userInput;
    private _previousValue;
    private _placeholder;
    private renderer;
    private localizationChangeSubscription;
    constructor(localization: LocalizationService, renderer: Renderer2);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    private writeInputValue;
    private setInputSelection;
    handleInput(event: any): void;
    handleFocus(event: any): void;
    handleBlur(event: any): void;
    handleKeydown(event: any): void;
    focus(): void;
    blur(): void;
    setInputSize(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SearchBarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SearchBarComponent, "kendo-searchbar", never, {
    "userInput": "userInput";
    "placeholder": "placeholder";
    "id": "id";
    "listId": "listId";
    "tagListId": "tagListId";
    "activeDescendant": "activeDescendant";
    "noDataLabel": "noDataLabel";
    "disabled": "disabled";
    "readonly": "readonly";
    "tabIndex": "tabIndex";
    "popupOpen": "popupOpen";
    "role": "role";
    "suggestedText": "suggestedText";
}, {
    "valueChange": "valueChange";
    "onBlur": "onBlur";
    "onFocus": "onFocus";
    "onClick": "onClick";
    "onNavigate": "onNavigate";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoYmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZWFyY2hiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBSZW5kZXJlcjIsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGlyZWN0aW9uIH0gZnJvbSAnLi9kaXJlY3Rpb24nO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNlYXJjaEJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uO1xuICAgIGRpcmVjdGlvbjogRGlyZWN0aW9uO1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbGlzdElkOiBzdHJpbmc7XG4gICAgdGFnTGlzdElkOiBzdHJpbmc7XG4gICAgYWN0aXZlRGVzY2VuZGFudDogc3RyaW5nO1xuICAgIG5vRGF0YUxhYmVsOiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcmVhZG9ubHk6IGJvb2xlYW47XG4gICAgdGFiSW5kZXg6IG51bWJlcjtcbiAgICBwb3B1cE9wZW46IGJvb2xlYW47XG4gICAgcm9sZTogc3RyaW5nO1xuICAgIHVzZXJJbnB1dDogc3RyaW5nO1xuICAgIHN1Z2dlc3RlZFRleHQ6IHN0cmluZztcbiAgICB2YWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5hdmlnYXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbnB1dDogRWxlbWVudFJlZjtcbiAgICBzZWFyY2hCYXJDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSB2YWx1ZTogc3RyaW5nO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfdXNlcklucHV0O1xuICAgIHByaXZhdGUgX3ByZXZpb3VzVmFsdWU7XG4gICAgcHJpdmF0ZSBfcGxhY2Vob2xkZXI7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbkNoYW5nZVN1YnNjcmlwdGlvbjtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogYW55KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgd3JpdGVJbnB1dFZhbHVlO1xuICAgIHByaXZhdGUgc2V0SW5wdXRTZWxlY3Rpb247XG4gICAgaGFuZGxlSW5wdXQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgaGFuZGxlRm9jdXMoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgaGFuZGxlQmx1cihldmVudDogYW55KTogdm9pZDtcbiAgICBoYW5kbGVLZXlkb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGZvY3VzKCk6IHZvaWQ7XG4gICAgYmx1cigpOiB2b2lkO1xuICAgIHNldElucHV0U2l6ZSgpOiB2b2lkO1xufVxuIl19