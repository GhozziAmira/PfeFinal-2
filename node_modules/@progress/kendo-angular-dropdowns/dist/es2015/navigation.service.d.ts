/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter } from '@angular/core';
import { NavigationAction } from './navigation-action';
import { DisabledItemsService } from './disabled-items.service';
import { SelectionService } from './selection.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class NavigationEvent {
    index: number;
    originalEvent: KeyboardEvent;
    /**
     * The index of the item to which the user navigated.
     */
    constructor(index: number, originalEvent: KeyboardEvent);
}
/**
 * @hidden
 */
export declare class NavigationService {
    private disabledItemsService;
    private selectionService;
    open: EventEmitter<NavigationEvent>;
    close: EventEmitter<NavigationEvent>;
    enter: EventEmitter<NavigationEvent>;
    tab: EventEmitter<NavigationEvent>;
    esc: EventEmitter<NavigationEvent>;
    up: EventEmitter<NavigationEvent>;
    right: EventEmitter<NavigationEvent>;
    down: EventEmitter<NavigationEvent>;
    left: EventEmitter<NavigationEvent>;
    delete: EventEmitter<NavigationEvent>;
    backspace: EventEmitter<NavigationEvent>;
    home: EventEmitter<NavigationEvent>;
    end: EventEmitter<NavigationEvent>;
    constructor(disabledItemsService: DisabledItemsService, selectionService: SelectionService);
    process(args: any): NavigationAction;
    private next;
    private clampIndex;
    private firstFocusableIndex;
    private isDisabled;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavigationService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NavigationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm5hdmlnYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7QUFXQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5hdmlnYXRpb25BY3Rpb24gfSBmcm9tICcuL25hdmlnYXRpb24tYWN0aW9uJztcbmltcG9ydCB7IERpc2FibGVkSXRlbXNTZXJ2aWNlIH0gZnJvbSAnLi9kaXNhYmxlZC1pdGVtcy5zZXJ2aWNlJztcbmltcG9ydCB7IFNlbGVjdGlvblNlcnZpY2UgfSBmcm9tICcuL3NlbGVjdGlvbi5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYXZpZ2F0aW9uRXZlbnQge1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgb3JpZ2luYWxFdmVudDogS2V5Ym9hcmRFdmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgaW5kZXggb2YgdGhlIGl0ZW0gdG8gd2hpY2ggdGhlIHVzZXIgbmF2aWdhdGVkLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGluZGV4OiBudW1iZXIsIG9yaWdpbmFsRXZlbnQ6IEtleWJvYXJkRXZlbnQpO1xufVxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdmlnYXRpb25TZXJ2aWNlIHtcbiAgICBwcml2YXRlIGRpc2FibGVkSXRlbXNTZXJ2aWNlO1xuICAgIHByaXZhdGUgc2VsZWN0aW9uU2VydmljZTtcbiAgICBvcGVuOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBjbG9zZTogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgZW50ZXI6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIHRhYjogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgZXNjOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICB1cDogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgcmlnaHQ6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGRvd246IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGxlZnQ6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGRlbGV0ZTogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgYmFja3NwYWNlOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBob21lOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBlbmQ6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGNvbnN0cnVjdG9yKGRpc2FibGVkSXRlbXNTZXJ2aWNlOiBEaXNhYmxlZEl0ZW1zU2VydmljZSwgc2VsZWN0aW9uU2VydmljZTogU2VsZWN0aW9uU2VydmljZSk7XG4gICAgcHJvY2VzcyhhcmdzOiBhbnkpOiBOYXZpZ2F0aW9uQWN0aW9uO1xuICAgIHByaXZhdGUgbmV4dDtcbiAgICBwcml2YXRlIGNsYW1wSW5kZXg7XG4gICAgcHJpdmF0ZSBmaXJzdEZvY3VzYWJsZUluZGV4O1xuICAgIHByaXZhdGUgaXNEaXNhYmxlZDtcbn1cbiJdfQ==