/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Renders the content of the custom list item in the MultiSelect
 * ([see example]({% slug templates_multiselect %}#toc-customizing-the-item-content)).
 * The template context is set to the current component.
 * To get a reference to the current text that is typed by the
 * user, use the `let-customItem` directive.
 *
 * > The `CustomItemTemplate` directive can only be used with the MultiSelect component.
 *
 * @example
 * ```ts
 * _@Component({
 * selector: 'my-app',
 * template: `
 *  <kendo-multiselect [data]="listItems" [allowCustom]="true">
 *    <ng-template kendoMultiSelectCustomItemTemplate let-customItem>
 *      <span>New Item: {{customItem}}</span>
 *    </ng-template>
 *  </kendo-multiselect>
 * `
 * })
 * class AppComponent {
 *   public listItems: Array<string> = ["Item 1", "Item 2", "Item 3", "Item 4"];
 * }
 * ```
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class CustomItemTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CustomItemTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CustomItemTemplateDirective, "[kendoMultiSelectCustomItemTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWl0ZW0tdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImN1c3RvbS1pdGVtLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0E7Ozs7O0FBR0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBSZW5kZXJzIHRoZSBjb250ZW50IG9mIHRoZSBjdXN0b20gbGlzdCBpdGVtIGluIHRoZSBNdWx0aVNlbGVjdFxuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB0ZW1wbGF0ZXNfbXVsdGlzZWxlY3QgJX0jdG9jLWN1c3RvbWl6aW5nLXRoZS1pdGVtLWNvbnRlbnQpKS5cbiAqIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzIHNldCB0byB0aGUgY3VycmVudCBjb21wb25lbnQuXG4gKiBUbyBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgdGV4dCB0aGF0IGlzIHR5cGVkIGJ5IHRoZVxuICogdXNlciwgdXNlIHRoZSBgbGV0LWN1c3RvbUl0ZW1gIGRpcmVjdGl2ZS5cbiAqXG4gKiA+IFRoZSBgQ3VzdG9tSXRlbVRlbXBsYXRlYCBkaXJlY3RpdmUgY2FuIG9ubHkgYmUgdXNlZCB3aXRoIHRoZSBNdWx0aVNlbGVjdCBjb21wb25lbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBfQENvbXBvbmVudCh7XG4gKiBzZWxlY3RvcjogJ215LWFwcCcsXG4gKiB0ZW1wbGF0ZTogYFxuICogIDxrZW5kby1tdWx0aXNlbGVjdCBbZGF0YV09XCJsaXN0SXRlbXNcIiBbYWxsb3dDdXN0b21dPVwidHJ1ZVwiPlxuICogICAgPG5nLXRlbXBsYXRlIGtlbmRvTXVsdGlTZWxlY3RDdXN0b21JdGVtVGVtcGxhdGUgbGV0LWN1c3RvbUl0ZW0+XG4gKiAgICAgIDxzcGFuPk5ldyBJdGVtOiB7e2N1c3RvbUl0ZW19fTwvc3Bhbj5cbiAqICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgPC9rZW5kby1tdWx0aXNlbGVjdD5cbiAqIGBcbiAqIH0pXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgbGlzdEl0ZW1zOiBBcnJheTxzdHJpbmc+ID0gW1wiSXRlbSAxXCIsIFwiSXRlbSAyXCIsIFwiSXRlbSAzXCIsIFwiSXRlbSA0XCJdO1xuICogfVxuICogYGBgXG4gKlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDdXN0b21JdGVtVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KTtcbn1cbiJdfQ==