/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Renders the fixed group header content. To define the fixed group template, nest an `<ng-template>` tag
 * with the `kendo<ComponentName>FixedGroupTemplate` directive inside the component tag. The template context is
 * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.
 *
 * - [Using `FixedGroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-fixed-group-template)
 * - [Using `FixedGroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-fixed-group-template)
 * - [Using `FixedGroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-fixed-group-template)
 * - [Using `FixedGroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-fixed-group-template)
 *
 * @example
 * ```ts
 * import { groupBy } from '@progress/kendo-data-query';
 * _@Component({
 * selector: 'my-app',
 * template: `
 *  <kendo-combobox [data]="groupedData" [textField]="'name'" [valueField]="'name'">
 *    <ng-template kendoComboBoxFixedGroupTemplate let-groupName>
 *      <span>Food type: {{groupName}} option</span>
 *    </ng-template>
 *  </kendo-combobox>
 * `
 * })
 * class AppComponent {
 *   public data = [
 *       { name: "Pork", category: "Food", subcategory: "Meat" },
 *       { name: "Pepper", category: "Food", subcategory: "Vegetables" },
 *       { name: "Beef", category: "Food", subcategory: "Meat" }
 *   ];
 *   public groupedData = groupBy(this.data, [{field: "subcategory"}]);
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class FixedGroupTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FixedGroupTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FixedGroupTemplateDirective, "[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4ZWQtZ3JvdXAtdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImZpeGVkLWdyb3VwLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQ0E7Ozs7O0FBR0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBSZW5kZXJzIHRoZSBmaXhlZCBncm91cCBoZWFkZXIgY29udGVudC4gVG8gZGVmaW5lIHRoZSBmaXhlZCBncm91cCB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnXG4gKiB3aXRoIHRoZSBga2VuZG88Q29tcG9uZW50TmFtZT5GaXhlZEdyb3VwVGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgdGhlIGNvbXBvbmVudCB0YWcuIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzXG4gKiBzZXQgdG8gdGhlIGN1cnJlbnQgY29tcG9uZW50LiBUbyBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtLCB1c2UgdGhlIGBsZXQtZ3JvdXBOYW1lYCBkaXJlY3RpdmUuXG4gKlxuICogLSBbVXNpbmcgYEZpeGVkR3JvdXBUZW1wbGF0ZWAgd2l0aCB0aGUgQXV0b0NvbXBsZXRlXSh7JSBzbHVnIHRlbXBsYXRlc19hdXRvY29tcGxldGUgJX0jdG9jLWZpeGVkLWdyb3VwLXRlbXBsYXRlKVxuICogLSBbVXNpbmcgYEZpeGVkR3JvdXBUZW1wbGF0ZWAgd2l0aCB0aGUgQ29tYm9Cb3hdKHslIHNsdWcgdGVtcGxhdGVzX2NvbWJvYm94ICV9I3RvYy1maXhlZC1ncm91cC10ZW1wbGF0ZSlcbiAqIC0gW1VzaW5nIGBGaXhlZEdyb3VwVGVtcGxhdGVgIHdpdGggdGhlIERyb3BEb3duTGlzdF0oeyUgc2x1ZyB0ZW1wbGF0ZXNfZGRsICV9I3RvYy1maXhlZC1ncm91cC10ZW1wbGF0ZSlcbiAqIC0gW1VzaW5nIGBGaXhlZEdyb3VwVGVtcGxhdGVgIHdpdGggdGhlIE11bHRpU2VsZWN0XSh7JSBzbHVnIHRlbXBsYXRlc19tdWx0aXNlbGVjdCAlfSN0b2MtZml4ZWQtZ3JvdXAtdGVtcGxhdGUpXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBncm91cEJ5IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGEtcXVlcnknO1xuICogX0BDb21wb25lbnQoe1xuICogc2VsZWN0b3I6ICdteS1hcHAnLFxuICogdGVtcGxhdGU6IGBcbiAqICA8a2VuZG8tY29tYm9ib3ggW2RhdGFdPVwiZ3JvdXBlZERhdGFcIiBbdGV4dEZpZWxkXT1cIiduYW1lJ1wiIFt2YWx1ZUZpZWxkXT1cIiduYW1lJ1wiPlxuICogICAgPG5nLXRlbXBsYXRlIGtlbmRvQ29tYm9Cb3hGaXhlZEdyb3VwVGVtcGxhdGUgbGV0LWdyb3VwTmFtZT5cbiAqICAgICAgPHNwYW4+Rm9vZCB0eXBlOiB7e2dyb3VwTmFtZX19IG9wdGlvbjwvc3Bhbj5cbiAqICAgIDwvbmctdGVtcGxhdGU+XG4gKiAgPC9rZW5kby1jb21ib2JveD5cbiAqIGBcbiAqIH0pXG4gKiBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YSA9IFtcbiAqICAgICAgIHsgbmFtZTogXCJQb3JrXCIsIGNhdGVnb3J5OiBcIkZvb2RcIiwgc3ViY2F0ZWdvcnk6IFwiTWVhdFwiIH0sXG4gKiAgICAgICB7IG5hbWU6IFwiUGVwcGVyXCIsIGNhdGVnb3J5OiBcIkZvb2RcIiwgc3ViY2F0ZWdvcnk6IFwiVmVnZXRhYmxlc1wiIH0sXG4gKiAgICAgICB7IG5hbWU6IFwiQmVlZlwiLCBjYXRlZ29yeTogXCJGb29kXCIsIHN1YmNhdGVnb3J5OiBcIk1lYXRcIiB9XG4gKiAgIF07XG4gKiAgIHB1YmxpYyBncm91cGVkRGF0YSA9IGdyb3VwQnkodGhpcy5kYXRhLCBbe2ZpZWxkOiBcInN1YmNhdGVnb3J5XCJ9XSk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRml4ZWRHcm91cFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pik7XG59XG4iXX0=