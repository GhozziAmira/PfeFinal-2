/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class DataService {
    grouped: boolean;
    groupIndices: number[];
    view: any[];
    private _data;
    private _flatData;
    data: any[];
    /**
     * @hidden
     * Used to get the actual items count, i.e. excluding the header items in case of grouping.
     */
    readonly itemsCount: number;
    /**
     * @hidden
     * Used to determine if the component received grouped data.
     */
    isGrouped(data: any[]): boolean;
    /**
     * @hidden
     * Used to calculate the last item index of each group.
     */
    getGroupIndices(data: any[]): number[];
    /**
     * @hidden
     * Used to get a flat array containing all items matching certain criteria.
     */
    filter(predicate: (value: any, index: number, array: any[]) => boolean): any[];
    /**
     * @hidden
     * Used to get the index of a given data item.
     */
    indexOf(item: any, startFrom?: number): number;
    /**
     * @hidden
     * Used to get the index of a data item based on an expression.
     */
    findIndex(predicate: any, startFrom?: number): number;
    /**
     * @hidden
     * Used to get the closest group header prior to an item index.
     */
    closestGroup(index: number): any;
    /**
     * @hidden
     * Used to get the first item matching the criteria.
     */
    find(predicate: any): number;
    /**
     * @hidden
     * Used to get the true index in a flattened data array.
     */
    flatIndex(index: number): any;
    /**
     * @hidden
     * Used to get the item at the provided index.
     */
    itemAt(index: number): any;
    /**
     * @hidden
     * Used to get the group at the provided index.
     */
    groupAt(index: number): any;
    /**
     * @hidden
     * Used to get the field by which the data is grouped.
     */
    groupField(): any;
    /**
     * @hidden
     * Used to get the group to which a dataItem belongs.
     */
    itemGroup(item: any): any;
    private flatten;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DataService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImRhdGEuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5RUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGF0YVNlcnZpY2Uge1xuICAgIGdyb3VwZWQ6IGJvb2xlYW47XG4gICAgZ3JvdXBJbmRpY2VzOiBudW1iZXJbXTtcbiAgICB2aWV3OiBhbnlbXTtcbiAgICBwcml2YXRlIF9kYXRhO1xuICAgIHByaXZhdGUgX2ZsYXREYXRhO1xuICAgIGRhdGE6IGFueVtdO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBVc2VkIHRvIGdldCB0aGUgYWN0dWFsIGl0ZW1zIGNvdW50LCBpLmUuIGV4Y2x1ZGluZyB0aGUgaGVhZGVyIGl0ZW1zIGluIGNhc2Ugb2YgZ3JvdXBpbmcuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaXRlbXNDb3VudDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBVc2VkIHRvIGRldGVybWluZSBpZiB0aGUgY29tcG9uZW50IHJlY2VpdmVkIGdyb3VwZWQgZGF0YS5cbiAgICAgKi9cbiAgICBpc0dyb3VwZWQoZGF0YTogYW55W10pOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBVc2VkIHRvIGNhbGN1bGF0ZSB0aGUgbGFzdCBpdGVtIGluZGV4IG9mIGVhY2ggZ3JvdXAuXG4gICAgICovXG4gICAgZ2V0R3JvdXBJbmRpY2VzKGRhdGE6IGFueVtdKTogbnVtYmVyW107XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIFVzZWQgdG8gZ2V0IGEgZmxhdCBhcnJheSBjb250YWluaW5nIGFsbCBpdGVtcyBtYXRjaGluZyBjZXJ0YWluIGNyaXRlcmlhLlxuICAgICAqL1xuICAgIGZpbHRlcihwcmVkaWNhdGU6ICh2YWx1ZTogYW55LCBpbmRleDogbnVtYmVyLCBhcnJheTogYW55W10pID0+IGJvb2xlYW4pOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogVXNlZCB0byBnZXQgdGhlIGluZGV4IG9mIGEgZ2l2ZW4gZGF0YSBpdGVtLlxuICAgICAqL1xuICAgIGluZGV4T2YoaXRlbTogYW55LCBzdGFydEZyb20/OiBudW1iZXIpOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIFVzZWQgdG8gZ2V0IHRoZSBpbmRleCBvZiBhIGRhdGEgaXRlbSBiYXNlZCBvbiBhbiBleHByZXNzaW9uLlxuICAgICAqL1xuICAgIGZpbmRJbmRleChwcmVkaWNhdGU6IGFueSwgc3RhcnRGcm9tPzogbnVtYmVyKTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBVc2VkIHRvIGdldCB0aGUgY2xvc2VzdCBncm91cCBoZWFkZXIgcHJpb3IgdG8gYW4gaXRlbSBpbmRleC5cbiAgICAgKi9cbiAgICBjbG9zZXN0R3JvdXAoaW5kZXg6IG51bWJlcik6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogVXNlZCB0byBnZXQgdGhlIGZpcnN0IGl0ZW0gbWF0Y2hpbmcgdGhlIGNyaXRlcmlhLlxuICAgICAqL1xuICAgIGZpbmQocHJlZGljYXRlOiBhbnkpOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIFVzZWQgdG8gZ2V0IHRoZSB0cnVlIGluZGV4IGluIGEgZmxhdHRlbmVkIGRhdGEgYXJyYXkuXG4gICAgICovXG4gICAgZmxhdEluZGV4KGluZGV4OiBudW1iZXIpOiBhbnk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIFVzZWQgdG8gZ2V0IHRoZSBpdGVtIGF0IHRoZSBwcm92aWRlZCBpbmRleC5cbiAgICAgKi9cbiAgICBpdGVtQXQoaW5kZXg6IG51bWJlcik6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogVXNlZCB0byBnZXQgdGhlIGdyb3VwIGF0IHRoZSBwcm92aWRlZCBpbmRleC5cbiAgICAgKi9cbiAgICBncm91cEF0KGluZGV4OiBudW1iZXIpOiBhbnk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIFVzZWQgdG8gZ2V0IHRoZSBmaWVsZCBieSB3aGljaCB0aGUgZGF0YSBpcyBncm91cGVkLlxuICAgICAqL1xuICAgIGdyb3VwRmllbGQoKTogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBVc2VkIHRvIGdldCB0aGUgZ3JvdXAgdG8gd2hpY2ggYSBkYXRhSXRlbSBiZWxvbmdzLlxuICAgICAqL1xuICAgIGl0ZW1Hcm91cChpdGVtOiBhbnkpOiBhbnk7XG4gICAgcHJpdmF0ZSBmbGF0dGVuO1xufVxuIl19