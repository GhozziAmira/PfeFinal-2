/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class MaskingService {
    rules: {
        [key: string]: RegExp;
    };
    prompt: string;
    mask: string;
    promptPlaceholder: string;
    includeLiterals: boolean;
    maskTokens: any[];
    unmaskTokens: any[];
    rawTokens: any[];
    validationTokens: any[];
    update({ mask, prompt, promptPlaceholder, rules, includeLiterals }: any): void;
    validationValue(maskedValue?: string): string;
    rawValue(maskedValue?: string): string;
    /**
     * @hidden
     */
    maskRaw(rawValue?: string): string;
    maskInput(input: string, control: string, splitPoint: number): any;
    maskInRange(pasted: string, oldValue: string, start: number, end: number): any;
    private maskRemoved;
    private adjustPosition;
    private maskInserted;
    protected readonly maskTokenCreator: {
        [key: string]: Function;
    };
    protected readonly unmaskTokenCreator: {
        [key: string]: Function;
    };
    protected readonly rawTokenCreator: {
        [key: string]: Function;
    };
    protected readonly validationTokenCreator: {
        [key: string]: Function;
    };
    private tokenize;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MaskingService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MaskingService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFza2luZy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm1hc2tpbmcuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWFza2luZ1NlcnZpY2Uge1xuICAgIHJ1bGVzOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IFJlZ0V4cDtcbiAgICB9O1xuICAgIHByb21wdDogc3RyaW5nO1xuICAgIG1hc2s6IHN0cmluZztcbiAgICBwcm9tcHRQbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIGluY2x1ZGVMaXRlcmFsczogYm9vbGVhbjtcbiAgICBtYXNrVG9rZW5zOiBhbnlbXTtcbiAgICB1bm1hc2tUb2tlbnM6IGFueVtdO1xuICAgIHJhd1Rva2VuczogYW55W107XG4gICAgdmFsaWRhdGlvblRva2VuczogYW55W107XG4gICAgdXBkYXRlKHsgbWFzaywgcHJvbXB0LCBwcm9tcHRQbGFjZWhvbGRlciwgcnVsZXMsIGluY2x1ZGVMaXRlcmFscyB9OiBhbnkpOiB2b2lkO1xuICAgIHZhbGlkYXRpb25WYWx1ZShtYXNrZWRWYWx1ZT86IHN0cmluZyk6IHN0cmluZztcbiAgICByYXdWYWx1ZShtYXNrZWRWYWx1ZT86IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbWFza1JhdyhyYXdWYWx1ZT86IHN0cmluZyk6IHN0cmluZztcbiAgICBtYXNrSW5wdXQoaW5wdXQ6IHN0cmluZywgY29udHJvbDogc3RyaW5nLCBzcGxpdFBvaW50OiBudW1iZXIpOiBhbnk7XG4gICAgbWFza0luUmFuZ2UocGFzdGVkOiBzdHJpbmcsIG9sZFZhbHVlOiBzdHJpbmcsIHN0YXJ0OiBudW1iZXIsIGVuZDogbnVtYmVyKTogYW55O1xuICAgIHByaXZhdGUgbWFza1JlbW92ZWQ7XG4gICAgcHJpdmF0ZSBhZGp1c3RQb3NpdGlvbjtcbiAgICBwcml2YXRlIG1hc2tJbnNlcnRlZDtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgbWFza1Rva2VuQ3JlYXRvcjoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBGdW5jdGlvbjtcbiAgICB9O1xuICAgIHByb3RlY3RlZCByZWFkb25seSB1bm1hc2tUb2tlbkNyZWF0b3I6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogRnVuY3Rpb247XG4gICAgfTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgcmF3VG9rZW5DcmVhdG9yOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IEZ1bmN0aW9uO1xuICAgIH07XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHZhbGlkYXRpb25Ub2tlbkNyZWF0b3I6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogRnVuY3Rpb247XG4gICAgfTtcbiAgICBwcml2YXRlIHRva2VuaXplO1xufVxuIl19