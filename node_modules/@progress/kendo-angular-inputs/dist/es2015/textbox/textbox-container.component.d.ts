/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterContentInit, ElementRef, OnDestroy, Renderer2, ChangeDetectorRef } from '@angular/core';
import { TextAreaDirective } from './textarea.directive';
import { NgControl } from '@angular/forms';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class TextBoxContainerComponent implements AfterContentInit, OnDestroy {
    private elementRef;
    private renderer;
    private changeDetectorRef;
    readonly hostClasses: boolean;
    readonly textareaElementClass: boolean;
    readonly focusedClass: boolean;
    readonly invalidClass: boolean;
    /**
     * @hidden
     */
    direction: string;
    /**
     * Sets the `id` attribute of the input inside the container.
     */
    id: string;
    /**
     * Adds a floating label which describes the input.
     */
    floatingLabel: string;
    kendoInput: any;
    textarea: TextAreaDirective;
    formControl: NgControl;
    /**
     * @hidden
     */
    focused: boolean;
    /**
     * @hidden
     */
    empty: boolean;
    /**
     * @hidden
     */
    invalid: boolean;
    private _subscriptions;
    private autoFillStarted;
    constructor(elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef, rtl: boolean);
    /**
     * @hidden
     */
    ngAfterContentInit(): void;
    /**
     * @hidden
     */
    ngOnDestroy(): void;
    private subscribe;
    private updateState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TextBoxContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TextBoxContainerComponent, "kendo-textbox-container", never, {
    "id": "id";
    "floatingLabel": "floatingLabel";
}, {}, ["kendoInput", "textarea", "formControl"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGJveC1jb250YWluZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRleHRib3gtY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdEQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGV4dEFyZWFEaXJlY3RpdmUgfSBmcm9tICcuL3RleHRhcmVhLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ0NvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGV4dEJveENvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvclJlZjtcbiAgICByZWFkb25seSBob3N0Q2xhc3NlczogYm9vbGVhbjtcbiAgICByZWFkb25seSB0ZXh0YXJlYUVsZW1lbnRDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBmb2N1c2VkQ2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaW52YWxpZENsYXNzOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBkaXJlY3Rpb246IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBgaWRgIGF0dHJpYnV0ZSBvZiB0aGUgaW5wdXQgaW5zaWRlIHRoZSBjb250YWluZXIuXG4gICAgICovXG4gICAgaWQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBBZGRzIGEgZmxvYXRpbmcgbGFiZWwgd2hpY2ggZGVzY3JpYmVzIHRoZSBpbnB1dC5cbiAgICAgKi9cbiAgICBmbG9hdGluZ0xhYmVsOiBzdHJpbmc7XG4gICAga2VuZG9JbnB1dDogYW55O1xuICAgIHRleHRhcmVhOiBUZXh0QXJlYURpcmVjdGl2ZTtcbiAgICBmb3JtQ29udHJvbDogTmdDb250cm9sO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBmb2N1c2VkOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBlbXB0eTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaW52YWxpZDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9zdWJzY3JpcHRpb25zO1xuICAgIHByaXZhdGUgYXV0b0ZpbGxTdGFydGVkO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZiwgcnRsOiBib29sZWFuKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBzdWJzY3JpYmU7XG4gICAgcHJpdmF0ZSB1cGRhdGVTdGF0ZTtcbn1cbiJdfQ==