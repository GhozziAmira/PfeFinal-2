/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnChanges, QueryList, TemplateRef } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class SliderTicksComponent implements OnChanges {
    private rtl;
    wrapperClasses: string;
    tickTitle: (value: number) => string;
    vertical: boolean;
    step: number;
    largeStep: number;
    min: number;
    max: number;
    labelTemplate: TemplateRef<any>;
    tickElements: QueryList<ElementRef>;
    ticks: Array<any>;
    constructor(rtl: boolean);
    ngOnChanges(_: any): void;
    private createTicks;
    private endTickClasses;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SliderTicksComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SliderTicksComponent, "[kendoSliderTicks]", never, {
    "tickTitle": "tickTitle";
    "vertical": "vertical";
    "step": "step";
    "largeStep": "largeStep";
    "min": "min";
    "max": "max";
    "labelTemplate": "labelTemplate";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXRpY2tzLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzbGlkZXItdGlja3MuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNsaWRlclRpY2tzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHJ0bDtcbiAgICB3cmFwcGVyQ2xhc3Nlczogc3RyaW5nO1xuICAgIHRpY2tUaXRsZTogKHZhbHVlOiBudW1iZXIpID0+IHN0cmluZztcbiAgICB2ZXJ0aWNhbDogYm9vbGVhbjtcbiAgICBzdGVwOiBudW1iZXI7XG4gICAgbGFyZ2VTdGVwOiBudW1iZXI7XG4gICAgbWluOiBudW1iZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgbGFiZWxUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICB0aWNrRWxlbWVudHM6IFF1ZXJ5TGlzdDxFbGVtZW50UmVmPjtcbiAgICB0aWNrczogQXJyYXk8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihydGw6IGJvb2xlYW4pO1xuICAgIG5nT25DaGFuZ2VzKF86IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjcmVhdGVUaWNrcztcbiAgICBwcml2YXRlIGVuZFRpY2tDbGFzc2VzO1xufVxuIl19